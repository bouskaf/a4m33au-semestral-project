============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 15633 was started by mac on Filip-MacBook-Pro.local,
Mon Jun 26 22:43:06 2017
The command was "./prover9".
============================== end of head ===========================

============================== INPUT =================================
set(prolog_style_variables).

formulas(assumptions).
(all X all Y (less(X,Y) & less(Y,X) -> X = Y)) # label(antisymmetry) # label(axiom).
(all X all Y all Z (less(X,Y) & less(Y,Z) -> less(X,Z))) # label(transitivity) # label(axiom).
(all X all Y (less(X,Y) | less(Y,X))) # label(totality) # label(axiom).
(all X (less(X,succ(X)) & (all Y (less(Y,X) | less(succ(X),Y))))) # label(succ) # label(axiom).
(all X (pred(succ(X)) = X & succ(pred(X)) = X)) # label(pred) # label(axiom).
(all T all Train all N1 all N2 (at(T,Train,N1) & at(T,Train,N2) -> N1 = N2)) # label(at_uniq) # label(axiom).
(all T all Train all N all OtherN (at(T,Train,N) -> -enter(T,Train,OtherN))) # label(at_nondup) # label(axiom).
(all T all Train all OtherTrain all N (at(T,Train,N) -> -enter(T,OtherTrain,N))) # label(input_nocol) # label(axiom).
(all T all Train all OtherTrain all N (enter(T,Train,N) & enter(T,OtherTrain,N) -> Train = OtherTrain)) # label(enter_uniq) # label(axiom).
(all T all Train all N (at(T,Train,N) -> occupied(T,Train,N))) # label(occupied) # label(axiom).
(all T all N (node_empty(T,N) <-> (all Train -at(T,Train,N)))) # label(node_empty) # label(axiom).
(all T all N (safe(T,N) <-> (all Train all OtherTrain (at(T,Train,N) & at(T,OtherTrain,N) -> Train = OtherTrain)))) # label(node_safe) # label(axiom).
(all N (notBlocked(N) <-> (all T1 all Train (at(T1,Train,N) & -open(T1,N) -> (exists T2 (less(T1,T2) & open(T2,N))))))) # label(not_blocked) # label(axiom).
(all T1 all Train all N (at(T1,Train,N) -> (exists T2 (will_move(T2,Train) & less(T1,T2))))) # label(train_will_move) # label(axiom).
(all T1 all Train all N (at(T1,Train,N) -> (exists T2 exists I (enter(T2,Train,I) & less(T2,T1))))) # label(train_entered) # label(axiom).
(all T all Train all OtherTrain all N (occupied(T,Train,N) & occupied(T,OtherTrain,N) -> Train = OtherTrain)) # label(occupied_only_once) # label(axiom).
(all T all N1 all N2 (-node_empty(T,N1) & switch(T,N1) = N2 -> switch(succ(T),N1) = N2)) # label(switch_restr) # label(axiom).
(all T all Train will_move(T,Train)) # label(train_moves) # label(axiom).
(exists Train exists N1 all T2 all N2 all T1 (-at(T2,Train,N2) & -enter(T2,Train,N2) & node_empty(T2,N1) & is_input(N1) & -at(T1,Train,N2) & less(T1,T2))) -> enter(succ(T2),Train,N1) # label(train_enters) # label(axiom).
(all T all Train all N (at(T,Train,N) -> N = out2 | N = s | N = in | N = out1)) # label(at_restr) # label(axiom).
(all T all N (open(T,N) -> is_input(N))) # label(open_restr) # label(axiom).
(all N (is_input(N) -> N = in)) # label(is_input) # label(axiom).
(all Train (gate(Train) = out2 | gate(Train) = out1)) # label(gate_restr) # label(axiom).
out2 != s & out2 != in & out2 != out1 & s != in & s != out1 & in != out1 # label(distinct_nodes) # label(axiom).
(all T all Train all N (occupied(T,Train,N) -> N = out2 | N = s | N = in | N = out1)) # label(occupied_values) # label(axiom).
(all T all Train all N (enter(T,Train,N) -> N = in)) # label(enter_values) # label(axiom).
(all T (switch(T,s) = out1 | switch(T,s) = out2)) # label(switch_s_value) # label(axiom).
(all T switch(T,in) = s) # label(switch_in_value) # label(axiom).
(all T all Train (occupied(T,Train,in) & gate(Train) = out2 -> switch(T,in) = s)) # label(switch_in_out2) # label(axiom).
(all T all Train (occupied(T,Train,s) & gate(Train) = out2 -> switch(T,s) = out2)) # label(switch_s_out2) # label(axiom).
(all T all Train (occupied(T,Train,in) & gate(Train) = out1 -> switch(T,in) = s)) # label(switch_in_out1) # label(axiom).
(all T all Train (occupied(T,Train,s) & gate(Train) = out1 -> switch(T,s) = out1)) # label(switch_s_out1) # label(axiom).
(all T all Train (enter(T,Train,in) | at(T,Train,in) & -open(T,in))) -> at(succ(T),Train,in) # label(move_input_no_change_in) # label(axiom).
(all T all Train ((at(T,Train,in) & open(T,in) & will_move(T,Train) -> at(succ(T),Train,s)) | (at(T,Train,in) & open(T,in) & -will_move(T,Train) -> at(succ(T),Train,in)))) # label(move_include_will_input_from_in_to_s) # label(axiom).
(all T all Train ((at(T,Train,out2) & -will_move(T,Train) -> at(succ(T),Train,out2)) | (at(T,Train,out2) & will_move(T,Train) -> (all N -at(succ(T),Train,N))))) # label(move_out_stay_or_leave_out2) # label(axiom).
(all T all Train ((at(T,Train,out1) & -will_move(T,Train) -> at(succ(T),Train,out1)) | (at(T,Train,out1) & will_move(T,Train) -> (all N -at(succ(T),Train,N))))) # label(move_out_stay_or_leave_out1) # label(axiom).
(all T all Train ((at(T,Train,s) & switch(T,s) = out1 & -will_move(T,Train) -> at(succ(T),Train,s)) | (at(T,Train,s) & switch(T,s) = out1 & will_move(T,Train) -> at(succ(T),Train,out1)))) # label(move_switch_include_will_from_s_to_out1) # label(axiom).
(all T all Train ((at(T,Train,s) & switch(T,s) = out2 & -will_move(T,Train) -> at(succ(T),Train,s)) | (at(T,Train,s) & switch(T,s) = out2 & will_move(T,Train) -> at(succ(T),Train,out2)))) # label(move_switch_include_will_from_s_to_out2) # label(axiom).
(all T all Train (occupied(succ(T),Train,out2) <-> occupied(T,Train,out2) & -(at(T,Train,out2) & -at(succ(T),Train,out2)) | at(T,Train,in) & gate(Train) = out2 & open(T,in))) # label(out2_occupied) # label(axiom).
(all T all Train (occupied(succ(T),Train,s) <-> occupied(T,Train,s) & -(at(T,Train,s) & -at(succ(T),Train,s)) | at(T,Train,in) & gate(Train) = out2 & open(T,in) | at(T,Train,in) & gate(Train) = out1 & open(T,in))) # label(s_occupied) # label(axiom).
(all T all Train (occupied(succ(T),Train,out1) <-> occupied(T,Train,out1) & -(at(T,Train,out1) & -at(succ(T),Train,out1)) | at(T,Train,in) & gate(Train) = out1 & open(T,in))) # label(out1_occupied) # label(axiom).
(all T all Train all N1 all N2 (path_open(T,Train,N1,N2) -> N1 = in & N2 = out2 | N1 = in & N2 = out1)) # label(open_values) # label(axiom).
(all T all Train all OtherTrain (path_open(T,Train,in,out2) <-> at(T,Train,in) & gate(Train) = out2 & (-occupied(T,OtherTrain,in) | Train = OtherTrain) & (-occupied(T,OtherTrain,s) | Train = OtherTrain) & (-occupied(T,OtherTrain,out2) | Train = OtherTrain))) # label(path_open_from_in_to_out2) # label(axiom).
(all T all Train all OtherTrain (path_open(T,Train,in,out1) <-> at(T,Train,in) & gate(Train) = out1 & (-occupied(T,OtherTrain,in) | Train = OtherTrain) & (-occupied(T,OtherTrain,s) | Train = OtherTrain) & (-occupied(T,OtherTrain,out1) | Train = OtherTrain))) # label(path_open_from_in_to_out1) # label(axiom).
(all T (open(T,in) <-> (exists Train path_open(T,Train,in,gate(Train))))) # label(open_in) # label(axiom).
end_of_list.

formulas(goals).
(all T all N safe(T,N)) # label(collision_critical) # label(conjecture).
end_of_list.

============================== end of input ==========================

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all X all Y (less(X,Y) & less(Y,X) -> X = Y)) # label(antisymmetry) # label(axiom) # label(non_clause).  [assumption].
2 (all X all Y all Z (less(X,Y) & less(Y,Z) -> less(X,Z))) # label(transitivity) # label(axiom) # label(non_clause).  [assumption].
3 (all X all Y (less(X,Y) | less(Y,X))) # label(totality) # label(axiom) # label(non_clause).  [assumption].
4 (all X (less(X,succ(X)) & (all Y (less(Y,X) | less(succ(X),Y))))) # label(succ) # label(axiom) # label(non_clause).  [assumption].
5 (all X (pred(succ(X)) = X & succ(pred(X)) = X)) # label(pred) # label(axiom) # label(non_clause).  [assumption].
6 (all T all Train all N1 all N2 (at(T,Train,N1) & at(T,Train,N2) -> N1 = N2)) # label(at_uniq) # label(axiom) # label(non_clause).  [assumption].
7 (all T all Train all N all OtherN (at(T,Train,N) -> -enter(T,Train,OtherN))) # label(at_nondup) # label(axiom) # label(non_clause).  [assumption].
8 (all T all Train all OtherTrain all N (at(T,Train,N) -> -enter(T,OtherTrain,N))) # label(input_nocol) # label(axiom) # label(non_clause).  [assumption].
9 (all T all Train all OtherTrain all N (enter(T,Train,N) & enter(T,OtherTrain,N) -> Train = OtherTrain)) # label(enter_uniq) # label(axiom) # label(non_clause).  [assumption].
10 (all T all Train all N (at(T,Train,N) -> occupied(T,Train,N))) # label(occupied) # label(axiom) # label(non_clause).  [assumption].
11 (all T all N (node_empty(T,N) <-> (all Train -at(T,Train,N)))) # label(node_empty) # label(axiom) # label(non_clause).  [assumption].
12 (all T all N (safe(T,N) <-> (all Train all OtherTrain (at(T,Train,N) & at(T,OtherTrain,N) -> Train = OtherTrain)))) # label(node_safe) # label(axiom) # label(non_clause).  [assumption].
13 (all N (notBlocked(N) <-> (all T1 all Train (at(T1,Train,N) & -open(T1,N) -> (exists T2 (less(T1,T2) & open(T2,N))))))) # label(not_blocked) # label(axiom) # label(non_clause).  [assumption].
14 (all T1 all Train all N (at(T1,Train,N) -> (exists T2 (will_move(T2,Train) & less(T1,T2))))) # label(train_will_move) # label(axiom) # label(non_clause).  [assumption].
15 (all T1 all Train all N (at(T1,Train,N) -> (exists T2 exists I (enter(T2,Train,I) & less(T2,T1))))) # label(train_entered) # label(axiom) # label(non_clause).  [assumption].
16 (all T all Train all OtherTrain all N (occupied(T,Train,N) & occupied(T,OtherTrain,N) -> Train = OtherTrain)) # label(occupied_only_once) # label(axiom) # label(non_clause).  [assumption].
17 (all T all N1 all N2 (-node_empty(T,N1) & switch(T,N1) = N2 -> switch(succ(T),N1) = N2)) # label(switch_restr) # label(axiom) # label(non_clause).  [assumption].
18 (all T all Train will_move(T,Train)) # label(train_moves) # label(axiom) # label(non_clause).  [assumption].
19 (exists Train exists N1 all T2 all N2 all T1 (-at(T2,Train,N2) & -enter(T2,Train,N2) & node_empty(T2,N1) & is_input(N1) & -at(T1,Train,N2) & less(T1,T2))) -> enter(succ(T2),Train,N1) # label(train_enters) # label(axiom) # label(non_clause).  [assumption].
20 (all T all Train all N (at(T,Train,N) -> N = out2 | N = s | N = in | N = out1)) # label(at_restr) # label(axiom) # label(non_clause).  [assumption].
21 (all T all N (open(T,N) -> is_input(N))) # label(open_restr) # label(axiom) # label(non_clause).  [assumption].
22 (all N (is_input(N) -> N = in)) # label(is_input) # label(axiom) # label(non_clause).  [assumption].
23 (all Train (gate(Train) = out2 | gate(Train) = out1)) # label(gate_restr) # label(axiom) # label(non_clause).  [assumption].
24 out2 != s & out2 != in & out2 != out1 & s != in & s != out1 & in != out1 # label(distinct_nodes) # label(axiom) # label(non_clause).  [assumption].
25 (all T all Train all N (occupied(T,Train,N) -> N = out2 | N = s | N = in | N = out1)) # label(occupied_values) # label(axiom) # label(non_clause).  [assumption].
26 (all T all Train all N (enter(T,Train,N) -> N = in)) # label(enter_values) # label(axiom) # label(non_clause).  [assumption].
27 (all T (switch(T,s) = out1 | switch(T,s) = out2)) # label(switch_s_value) # label(axiom) # label(non_clause).  [assumption].
28 (all T switch(T,in) = s) # label(switch_in_value) # label(axiom) # label(non_clause).  [assumption].
29 (all T all Train (occupied(T,Train,in) & gate(Train) = out2 -> switch(T,in) = s)) # label(switch_in_out2) # label(axiom) # label(non_clause).  [assumption].
30 (all T all Train (occupied(T,Train,s) & gate(Train) = out2 -> switch(T,s) = out2)) # label(switch_s_out2) # label(axiom) # label(non_clause).  [assumption].
31 (all T all Train (occupied(T,Train,in) & gate(Train) = out1 -> switch(T,in) = s)) # label(switch_in_out1) # label(axiom) # label(non_clause).  [assumption].
32 (all T all Train (occupied(T,Train,s) & gate(Train) = out1 -> switch(T,s) = out1)) # label(switch_s_out1) # label(axiom) # label(non_clause).  [assumption].
33 (all T all Train (enter(T,Train,in) | at(T,Train,in) & -open(T,in))) -> at(succ(T),Train,in) # label(move_input_no_change_in) # label(axiom) # label(non_clause).  [assumption].
34 (all T all Train ((at(T,Train,in) & open(T,in) & will_move(T,Train) -> at(succ(T),Train,s)) | (at(T,Train,in) & open(T,in) & -will_move(T,Train) -> at(succ(T),Train,in)))) # label(move_include_will_input_from_in_to_s) # label(axiom) # label(non_clause).  [assumption].
35 (all T all Train ((at(T,Train,out2) & -will_move(T,Train) -> at(succ(T),Train,out2)) | (at(T,Train,out2) & will_move(T,Train) -> (all N -at(succ(T),Train,N))))) # label(move_out_stay_or_leave_out2) # label(axiom) # label(non_clause).  [assumption].
36 (all T all Train ((at(T,Train,out1) & -will_move(T,Train) -> at(succ(T),Train,out1)) | (at(T,Train,out1) & will_move(T,Train) -> (all N -at(succ(T),Train,N))))) # label(move_out_stay_or_leave_out1) # label(axiom) # label(non_clause).  [assumption].
37 (all T all Train ((at(T,Train,s) & switch(T,s) = out1 & -will_move(T,Train) -> at(succ(T),Train,s)) | (at(T,Train,s) & switch(T,s) = out1 & will_move(T,Train) -> at(succ(T),Train,out1)))) # label(move_switch_include_will_from_s_to_out1) # label(axiom) # label(non_clause).  [assumption].
38 (all T all Train ((at(T,Train,s) & switch(T,s) = out2 & -will_move(T,Train) -> at(succ(T),Train,s)) | (at(T,Train,s) & switch(T,s) = out2 & will_move(T,Train) -> at(succ(T),Train,out2)))) # label(move_switch_include_will_from_s_to_out2) # label(axiom) # label(non_clause).  [assumption].
39 (all T all Train (occupied(succ(T),Train,out2) <-> occupied(T,Train,out2) & -(at(T,Train,out2) & -at(succ(T),Train,out2)) | at(T,Train,in) & gate(Train) = out2 & open(T,in))) # label(out2_occupied) # label(axiom) # label(non_clause).  [assumption].
40 (all T all Train (occupied(succ(T),Train,s) <-> occupied(T,Train,s) & -(at(T,Train,s) & -at(succ(T),Train,s)) | at(T,Train,in) & gate(Train) = out2 & open(T,in) | at(T,Train,in) & gate(Train) = out1 & open(T,in))) # label(s_occupied) # label(axiom) # label(non_clause).  [assumption].
41 (all T all Train (occupied(succ(T),Train,out1) <-> occupied(T,Train,out1) & -(at(T,Train,out1) & -at(succ(T),Train,out1)) | at(T,Train,in) & gate(Train) = out1 & open(T,in))) # label(out1_occupied) # label(axiom) # label(non_clause).  [assumption].
42 (all T all Train all N1 all N2 (path_open(T,Train,N1,N2) -> N1 = in & N2 = out2 | N1 = in & N2 = out1)) # label(open_values) # label(axiom) # label(non_clause).  [assumption].
43 (all T all Train all OtherTrain (path_open(T,Train,in,out2) <-> at(T,Train,in) & gate(Train) = out2 & (-occupied(T,OtherTrain,in) | Train = OtherTrain) & (-occupied(T,OtherTrain,s) | Train = OtherTrain) & (-occupied(T,OtherTrain,out2) | Train = OtherTrain))) # label(path_open_from_in_to_out2) # label(axiom) # label(non_clause).  [assumption].
44 (all T all Train all OtherTrain (path_open(T,Train,in,out1) <-> at(T,Train,in) & gate(Train) = out1 & (-occupied(T,OtherTrain,in) | Train = OtherTrain) & (-occupied(T,OtherTrain,s) | Train = OtherTrain) & (-occupied(T,OtherTrain,out1) | Train = OtherTrain))) # label(path_open_from_in_to_out1) # label(axiom) # label(non_clause).  [assumption].
45 (all T (open(T,in) <-> (exists Train path_open(T,Train,in,gate(Train))))) # label(open_in) # label(axiom) # label(non_clause).  [assumption].
46 (all T all N safe(T,N)) # label(collision_critical) # label(conjecture) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

% Clauses before input processing:

formulas(usable).
end_of_list.

formulas(sos).
-less(A,B) | -less(B,A) | B = A # label(antisymmetry) # label(axiom).  [clausify(1)].
-less(A,B) | -less(B,C) | less(A,C) # label(transitivity) # label(axiom).  [clausify(2)].
less(A,B) | less(B,A) # label(totality) # label(axiom).  [clausify(3)].
less(A,succ(A)) # label(succ) # label(axiom).  [clausify(4)].
less(A,B) | less(succ(B),A) # label(succ) # label(axiom).  [clausify(4)].
pred(succ(A)) = A # label(pred) # label(axiom).  [clausify(5)].
succ(pred(A)) = A # label(pred) # label(axiom).  [clausify(5)].
-at(A,B,C) | -at(A,B,D) | D = C # label(at_uniq) # label(axiom).  [clausify(6)].
-at(A,B,C) | -enter(A,B,D) # label(at_nondup) # label(axiom).  [clausify(7)].
-at(A,B,C) | -enter(A,D,C) # label(input_nocol) # label(axiom).  [clausify(8)].
-enter(A,B,C) | -enter(A,D,C) | D = B # label(enter_uniq) # label(axiom).  [clausify(9)].
-at(A,B,C) | occupied(A,B,C) # label(occupied) # label(axiom).  [clausify(10)].
-node_empty(A,B) | -at(A,C,B) # label(node_empty) # label(axiom).  [clausify(11)].
node_empty(A,B) | at(A,f1(A,B),B) # label(node_empty) # label(axiom).  [clausify(11)].
-safe(A,B) | -at(A,C,B) | -at(A,D,B) | D = C # label(node_safe) # label(axiom).  [clausify(12)].
safe(A,B) | at(A,f2(A,B),B) # label(node_safe) # label(axiom).  [clausify(12)].
safe(A,B) | at(A,f3(A,B),B) # label(node_safe) # label(axiom).  [clausify(12)].
safe(A,B) | f3(A,B) != f2(A,B) # label(node_safe) # label(axiom).  [clausify(12)].
-notBlocked(A) | -at(B,C,A) | open(B,A) | less(B,f4(A,B,C)) # label(not_blocked) # label(axiom).  [clausify(13)].
-notBlocked(A) | -at(B,C,A) | open(B,A) | open(f4(A,B,C),A) # label(not_blocked) # label(axiom).  [clausify(13)].
notBlocked(A) | at(f5(A),f6(A),A) # label(not_blocked) # label(axiom).  [clausify(13)].
notBlocked(A) | -open(f5(A),A) # label(not_blocked) # label(axiom).  [clausify(13)].
notBlocked(A) | -less(f5(A),B) | -open(B,A) # label(not_blocked) # label(axiom).  [clausify(13)].
-at(A,B,C) | will_move(f7(A,B,C),B) # label(train_will_move) # label(axiom).  [clausify(14)].
-at(A,B,C) | less(A,f7(A,B,C)) # label(train_will_move) # label(axiom).  [clausify(14)].
-at(A,B,C) | enter(f8(A,B,C),B,f9(A,B,C)) # label(train_entered) # label(axiom).  [clausify(15)].
-at(A,B,C) | less(f8(A,B,C),A) # label(train_entered) # label(axiom).  [clausify(15)].
-occupied(A,B,C) | -occupied(A,D,C) | D = B # label(occupied_only_once) # label(axiom).  [clausify(16)].
node_empty(A,B) | switch(A,B) != C | switch(succ(A),B) = C # label(switch_restr) # label(axiom).  [clausify(17)].
will_move(A,B) # label(train_moves) # label(axiom).  [clausify(18)].
at(f10(A,B,C,D,E),D,f11(A,B,C,D,E)) | enter(f10(A,B,C,D,E),D,f11(A,B,C,D,E)) | -node_empty(f10(A,B,C,D,E),E) | -is_input(E) | at(f12(A,B,C,D,E),D,f11(A,B,C,D,E)) | -less(f12(A,B,C,D,E),f10(A,B,C,D,E)) | enter(succ(A),B,C) # label(train_enters) # label(axiom).  [clausify(19)].
-at(A,B,C) | out2 = C | s = C | in = C | out1 = C # label(at_restr) # label(axiom).  [clausify(20)].
-open(A,B) | is_input(B) # label(open_restr) # label(axiom).  [clausify(21)].
-is_input(A) | in = A # label(is_input) # label(axiom).  [clausify(22)].
gate(A) = out2 | gate(A) = out1 # label(gate_restr) # label(axiom).  [clausify(23)].
s != out2 # label(distinct_nodes) # label(axiom).  [clausify(24)].
in != out2 # label(distinct_nodes) # label(axiom).  [clausify(24)].
out1 != out2 # label(distinct_nodes) # label(axiom).  [clausify(24)].
in != s # label(distinct_nodes) # label(axiom).  [clausify(24)].
out1 != s # label(distinct_nodes) # label(axiom).  [clausify(24)].
out1 != in # label(distinct_nodes) # label(axiom).  [clausify(24)].
-occupied(A,B,C) | out2 = C | s = C | in = C | out1 = C # label(occupied_values) # label(axiom).  [clausify(25)].
-enter(A,B,C) | in = C # label(enter_values) # label(axiom).  [clausify(26)].
switch(A,s) = out1 | switch(A,s) = out2 # label(switch_s_value) # label(axiom).  [clausify(27)].
switch(A,in) = s # label(switch_in_value) # label(axiom).  [clausify(28)].
-occupied(A,B,in) | gate(B) != out2 | switch(A,in) = s # label(switch_in_out2) # label(axiom).  [clausify(29)].
-occupied(A,B,s) | gate(B) != out2 | switch(A,s) = out2 # label(switch_s_out2) # label(axiom).  [clausify(30)].
-occupied(A,B,in) | gate(B) != out1 | switch(A,in) = s # label(switch_in_out1) # label(axiom).  [clausify(31)].
-occupied(A,B,s) | gate(B) != out1 | switch(A,s) = out1 # label(switch_s_out1) # label(axiom).  [clausify(32)].
-enter(f13(A,B),f14(A,B),in) | at(succ(A),B,in) # label(move_input_no_change_in) # label(axiom).  [clausify(33)].
-at(f13(A,B),f14(A,B),in) | open(f13(A,B),in) | at(succ(A),B,in) # label(move_input_no_change_in) # label(axiom).  [clausify(33)].
-occupied(succ(A),B,out2) | occupied(A,B,out2) | at(A,B,in) # label(out2_occupied) # label(axiom).  [clausify(39)].
-occupied(succ(A),B,out2) | occupied(A,B,out2) | gate(B) = out2 # label(out2_occupied) # label(axiom).  [clausify(39)].
-occupied(succ(A),B,out2) | occupied(A,B,out2) | open(A,in) # label(out2_occupied) # label(axiom).  [clausify(39)].
-occupied(succ(A),B,out2) | -at(A,B,out2) | at(succ(A),B,out2) | at(A,B,in) # label(out2_occupied) # label(axiom).  [clausify(39)].
-occupied(succ(A),B,out2) | -at(A,B,out2) | at(succ(A),B,out2) | gate(B) = out2 # label(out2_occupied) # label(axiom).  [clausify(39)].
-occupied(succ(A),B,out2) | -at(A,B,out2) | at(succ(A),B,out2) | open(A,in) # label(out2_occupied) # label(axiom).  [clausify(39)].
occupied(succ(A),B,out2) | -occupied(A,B,out2) | at(A,B,out2) # label(out2_occupied) # label(axiom).  [clausify(39)].
occupied(succ(A),B,out2) | -occupied(A,B,out2) | -at(succ(A),B,out2) # label(out2_occupied) # label(axiom).  [clausify(39)].
occupied(succ(A),B,out2) | -at(A,B,in) | gate(B) != out2 | -open(A,in) # label(out2_occupied) # label(axiom).  [clausify(39)].
-occupied(succ(A),B,s) | occupied(A,B,s) | at(A,B,in) # label(s_occupied) # label(axiom).  [clausify(40)].
-occupied(succ(A),B,s) | occupied(A,B,s) | gate(B) = out2 | gate(B) = out1 # label(s_occupied) # label(axiom).  [clausify(40)].
-occupied(succ(A),B,s) | occupied(A,B,s) | open(A,in) # label(s_occupied) # label(axiom).  [clausify(40)].
-occupied(succ(A),B,s) | -at(A,B,s) | at(succ(A),B,s) | at(A,B,in) # label(s_occupied) # label(axiom).  [clausify(40)].
-occupied(succ(A),B,s) | -at(A,B,s) | at(succ(A),B,s) | gate(B) = out2 | gate(B) = out1 # label(s_occupied) # label(axiom).  [clausify(40)].
-occupied(succ(A),B,s) | -at(A,B,s) | at(succ(A),B,s) | open(A,in) # label(s_occupied) # label(axiom).  [clausify(40)].
occupied(succ(A),B,s) | -occupied(A,B,s) | at(A,B,s) # label(s_occupied) # label(axiom).  [clausify(40)].
occupied(succ(A),B,s) | -occupied(A,B,s) | -at(succ(A),B,s) # label(s_occupied) # label(axiom).  [clausify(40)].
occupied(succ(A),B,s) | -at(A,B,in) | gate(B) != out2 | -open(A,in) # label(s_occupied) # label(axiom).  [clausify(40)].
occupied(succ(A),B,s) | -at(A,B,in) | gate(B) != out1 | -open(A,in) # label(s_occupied) # label(axiom).  [clausify(40)].
-occupied(succ(A),B,out1) | occupied(A,B,out1) | at(A,B,in) # label(out1_occupied) # label(axiom).  [clausify(41)].
-occupied(succ(A),B,out1) | occupied(A,B,out1) | gate(B) = out1 # label(out1_occupied) # label(axiom).  [clausify(41)].
-occupied(succ(A),B,out1) | occupied(A,B,out1) | open(A,in) # label(out1_occupied) # label(axiom).  [clausify(41)].
-occupied(succ(A),B,out1) | -at(A,B,out1) | at(succ(A),B,out1) | at(A,B,in) # label(out1_occupied) # label(axiom).  [clausify(41)].
-occupied(succ(A),B,out1) | -at(A,B,out1) | at(succ(A),B,out1) | gate(B) = out1 # label(out1_occupied) # label(axiom).  [clausify(41)].
-occupied(succ(A),B,out1) | -at(A,B,out1) | at(succ(A),B,out1) | open(A,in) # label(out1_occupied) # label(axiom).  [clausify(41)].
occupied(succ(A),B,out1) | -occupied(A,B,out1) | at(A,B,out1) # label(out1_occupied) # label(axiom).  [clausify(41)].
occupied(succ(A),B,out1) | -occupied(A,B,out1) | -at(succ(A),B,out1) # label(out1_occupied) # label(axiom).  [clausify(41)].
occupied(succ(A),B,out1) | -at(A,B,in) | gate(B) != out1 | -open(A,in) # label(out1_occupied) # label(axiom).  [clausify(41)].
-path_open(A,B,C,D) | in = C # label(open_values) # label(axiom).  [clausify(42)].
-path_open(A,B,C,D) | out2 = D | out1 = D # label(open_values) # label(axiom).  [clausify(42)].
-path_open(A,B,in,out2) | at(A,B,in) # label(path_open_from_in_to_out2) # label(axiom).  [clausify(43)].
-path_open(A,B,in,out2) | gate(B) = out2 # label(path_open_from_in_to_out2) # label(axiom).  [clausify(43)].
-path_open(A,B,in,out2) | -occupied(A,C,in) | C = B # label(path_open_from_in_to_out2) # label(axiom).  [clausify(43)].
-path_open(A,B,in,out2) | -occupied(A,C,s) | C = B # label(path_open_from_in_to_out2) # label(axiom).  [clausify(43)].
-path_open(A,B,in,out2) | -occupied(A,C,out2) | C = B # label(path_open_from_in_to_out2) # label(axiom).  [clausify(43)].
path_open(A,B,in,out2) | -at(A,B,in) | gate(B) != out2 | occupied(A,C,in) | occupied(A,C,s) | occupied(A,C,out2) # label(path_open_from_in_to_out2) # label(axiom).  [clausify(43)].
path_open(A,B,in,out2) | -at(A,B,in) | gate(B) != out2 | C != B # label(path_open_from_in_to_out2) # label(axiom).  [clausify(43)].
-path_open(A,B,in,out1) | at(A,B,in) # label(path_open_from_in_to_out1) # label(axiom).  [clausify(44)].
-path_open(A,B,in,out1) | gate(B) = out1 # label(path_open_from_in_to_out1) # label(axiom).  [clausify(44)].
-path_open(A,B,in,out1) | -occupied(A,C,in) | C = B # label(path_open_from_in_to_out1) # label(axiom).  [clausify(44)].
-path_open(A,B,in,out1) | -occupied(A,C,s) | C = B # label(path_open_from_in_to_out1) # label(axiom).  [clausify(44)].
-path_open(A,B,in,out1) | -occupied(A,C,out1) | C = B # label(path_open_from_in_to_out1) # label(axiom).  [clausify(44)].
path_open(A,B,in,out1) | -at(A,B,in) | gate(B) != out1 | occupied(A,C,in) | occupied(A,C,s) | occupied(A,C,out1) # label(path_open_from_in_to_out1) # label(axiom).  [clausify(44)].
path_open(A,B,in,out1) | -at(A,B,in) | gate(B) != out1 | C != B # label(path_open_from_in_to_out1) # label(axiom).  [clausify(44)].
-open(A,in) | path_open(A,f15(A),in,gate(f15(A))) # label(open_in) # label(axiom).  [clausify(45)].
open(A,in) | -path_open(A,B,in,gate(B)) # label(open_in) # label(axiom).  [clausify(45)].
-safe(c1,c2) # label(collision_critical) # label(conjecture).  [deny(46)].
end_of_list.

formulas(demodulators).
end_of_list.

============================== PREDICATE ELIMINATION =================

Eliminating notBlocked/1
47 notBlocked(A) | at(f5(A),f6(A),A) # label(not_blocked) # label(axiom).  [clausify(13)].
48 -notBlocked(A) | -at(B,C,A) | open(B,A) | less(B,f4(A,B,C)) # label(not_blocked) # label(axiom).  [clausify(13)].
49 -notBlocked(A) | -at(B,C,A) | open(B,A) | open(f4(A,B,C),A) # label(not_blocked) # label(axiom).  [clausify(13)].
Derived: at(f5(A),f6(A),A) | -at(B,C,A) | open(B,A) | less(B,f4(A,B,C)).  [resolve(47,a,48,a)].
Derived: at(f5(A),f6(A),A) | -at(B,C,A) | open(B,A) | open(f4(A,B,C),A).  [resolve(47,a,49,a)].
50 notBlocked(A) | -open(f5(A),A) # label(not_blocked) # label(axiom).  [clausify(13)].
Derived: -open(f5(A),A) | -at(B,C,A) | open(B,A) | less(B,f4(A,B,C)).  [resolve(50,a,48,a)].
Derived: -open(f5(A),A) | -at(B,C,A) | open(B,A) | open(f4(A,B,C),A).  [resolve(50,a,49,a)].
51 notBlocked(A) | -less(f5(A),B) | -open(B,A) # label(not_blocked) # label(axiom).  [clausify(13)].
Derived: -less(f5(A),B) | -open(B,A) | -at(C,D,A) | open(C,A) | less(C,f4(A,C,D)).  [resolve(51,a,48,a)].
Derived: -less(f5(A),B) | -open(B,A) | -at(C,D,A) | open(C,A) | open(f4(A,C,D),A).  [resolve(51,a,49,a)].

Eliminating will_move/2

Eliminating is_input/1
52 -open(A,B) | is_input(B) # label(open_restr) # label(axiom).  [clausify(21)].
53 at(f10(A,B,C,D,E),D,f11(A,B,C,D,E)) | enter(f10(A,B,C,D,E),D,f11(A,B,C,D,E)) | -node_empty(f10(A,B,C,D,E),E) | -is_input(E) | at(f12(A,B,C,D,E),D,f11(A,B,C,D,E)) | -less(f12(A,B,C,D,E),f10(A,B,C,D,E)) | enter(succ(A),B,C) # label(train_enters) # label(axiom).  [clausify(19)].
Derived: -open(A,B) | at(f10(C,D,E,F,B),F,f11(C,D,E,F,B)) | enter(f10(C,D,E,F,B),F,f11(C,D,E,F,B)) | -node_empty(f10(C,D,E,F,B),B) | at(f12(C,D,E,F,B),F,f11(C,D,E,F,B)) | -less(f12(C,D,E,F,B),f10(C,D,E,F,B)) | enter(succ(C),D,E).  [resolve(52,b,53,d)].
54 -is_input(A) | in = A # label(is_input) # label(axiom).  [clausify(22)].
Derived: in = A | -open(B,A).  [resolve(54,a,52,b)].

============================== end predicate elimination =============

Auto_denials:  (non-Horn, no changes).

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ =, open, less, safe, node_empty, at, occupied, enter, path_open ]).
Function symbol precedence:  function_order([ in, out1, out2, s, c1, c2, switch, f1, f2, f3, f13, f14, succ, gate, pred, f5, f6, f15, f4, f7, f8, f9, f10, f11, f12 ]).
After inverse_order:  (no changes).
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)
  % set(neg_ur_resolution).  % (non-Horn, less than 100 clauses)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

kept:      55 -less(A,B) | -less(B,A) | B = A # label(antisymmetry) # label(axiom).  [clausify(1)].
kept:      56 -less(A,B) | -less(B,C) | less(A,C) # label(transitivity) # label(axiom).  [clausify(2)].
kept:      57 less(A,B) | less(B,A) # label(totality) # label(axiom).  [clausify(3)].
kept:      58 less(A,succ(A)) # label(succ) # label(axiom).  [clausify(4)].
kept:      59 less(A,B) | less(succ(B),A) # label(succ) # label(axiom).  [clausify(4)].
kept:      60 pred(succ(A)) = A # label(pred) # label(axiom).  [clausify(5)].
kept:      61 succ(pred(A)) = A # label(pred) # label(axiom).  [clausify(5)].
kept:      62 -at(A,B,C) | -at(A,B,D) | D = C # label(at_uniq) # label(axiom).  [clausify(6)].
kept:      63 -at(A,B,C) | -enter(A,B,D) # label(at_nondup) # label(axiom).  [clausify(7)].
kept:      64 -at(A,B,C) | -enter(A,D,C) # label(input_nocol) # label(axiom).  [clausify(8)].
kept:      65 -enter(A,B,C) | -enter(A,D,C) | D = B # label(enter_uniq) # label(axiom).  [clausify(9)].
kept:      66 -at(A,B,C) | occupied(A,B,C) # label(occupied) # label(axiom).  [clausify(10)].
kept:      67 -node_empty(A,B) | -at(A,C,B) # label(node_empty) # label(axiom).  [clausify(11)].
kept:      68 node_empty(A,B) | at(A,f1(A,B),B) # label(node_empty) # label(axiom).  [clausify(11)].
kept:      69 -safe(A,B) | -at(A,C,B) | -at(A,D,B) | D = C # label(node_safe) # label(axiom).  [clausify(12)].
kept:      70 safe(A,B) | at(A,f2(A,B),B) # label(node_safe) # label(axiom).  [clausify(12)].
kept:      71 safe(A,B) | at(A,f3(A,B),B) # label(node_safe) # label(axiom).  [clausify(12)].
kept:      72 safe(A,B) | f3(A,B) != f2(A,B) # label(node_safe) # label(axiom).  [clausify(12)].
kept:      73 -at(A,B,C) | less(A,f7(A,B,C)) # label(train_will_move) # label(axiom).  [clausify(14)].
kept:      74 -at(A,B,C) | enter(f8(A,B,C),B,f9(A,B,C)) # label(train_entered) # label(axiom).  [clausify(15)].
kept:      75 -at(A,B,C) | less(f8(A,B,C),A) # label(train_entered) # label(axiom).  [clausify(15)].
kept:      76 -occupied(A,B,C) | -occupied(A,D,C) | D = B # label(occupied_only_once) # label(axiom).  [clausify(16)].
kept:      77 node_empty(A,B) | switch(A,B) != C | switch(succ(A),B) = C # label(switch_restr) # label(axiom).  [clausify(17)].
kept:      78 -at(A,B,C) | out2 = C | s = C | in = C | out1 = C # label(at_restr) # label(axiom).  [clausify(20)].
kept:      79 gate(A) = out2 | gate(A) = out1 # label(gate_restr) # label(axiom).  [clausify(23)].
kept:      80 s != out2 # label(distinct_nodes) # label(axiom).  [clausify(24)].
           81 in != out2 # label(distinct_nodes) # label(axiom).  [clausify(24)].
kept:      82 out2 != in.  [copy(81),flip(a)].
           83 out1 != out2 # label(distinct_nodes) # label(axiom).  [clausify(24)].
kept:      84 out2 != out1.  [copy(83),flip(a)].
           85 in != s # label(distinct_nodes) # label(axiom).  [clausify(24)].
kept:      86 s != in.  [copy(85),flip(a)].
           87 out1 != s # label(distinct_nodes) # label(axiom).  [clausify(24)].
kept:      88 s != out1.  [copy(87),flip(a)].
kept:      89 out1 != in # label(distinct_nodes) # label(axiom).  [clausify(24)].
kept:      90 -occupied(A,B,C) | out2 = C | s = C | in = C | out1 = C # label(occupied_values) # label(axiom).  [clausify(25)].
kept:      91 -enter(A,B,C) | in = C # label(enter_values) # label(axiom).  [clausify(26)].
kept:      92 switch(A,s) = out1 | switch(A,s) = out2 # label(switch_s_value) # label(axiom).  [clausify(27)].
kept:      93 switch(A,in) = s # label(switch_in_value) # label(axiom).  [clausify(28)].
           94 -occupied(A,B,in) | gate(B) != out2 | switch(A,in) = s # label(switch_in_out2) # label(axiom).  [clausify(29)].
kept:      95 -occupied(A,B,s) | gate(B) != out2 | switch(A,s) = out2 # label(switch_s_out2) # label(axiom).  [clausify(30)].
           96 -occupied(A,B,in) | gate(B) != out1 | switch(A,in) = s # label(switch_in_out1) # label(axiom).  [clausify(31)].
kept:      97 -occupied(A,B,s) | gate(B) != out1 | switch(A,s) = out1 # label(switch_s_out1) # label(axiom).  [clausify(32)].
kept:      98 -enter(f13(A,B),f14(A,B),in) | at(succ(A),B,in) # label(move_input_no_change_in) # label(axiom).  [clausify(33)].
kept:      99 -at(f13(A,B),f14(A,B),in) | open(f13(A,B),in) | at(succ(A),B,in) # label(move_input_no_change_in) # label(axiom).  [clausify(33)].
kept:      100 -occupied(succ(A),B,out2) | occupied(A,B,out2) | at(A,B,in) # label(out2_occupied) # label(axiom).  [clausify(39)].
kept:      101 -occupied(succ(A),B,out2) | occupied(A,B,out2) | gate(B) = out2 # label(out2_occupied) # label(axiom).  [clausify(39)].
kept:      102 -occupied(succ(A),B,out2) | occupied(A,B,out2) | open(A,in) # label(out2_occupied) # label(axiom).  [clausify(39)].
kept:      103 -occupied(succ(A),B,out2) | -at(A,B,out2) | at(succ(A),B,out2) | at(A,B,in) # label(out2_occupied) # label(axiom).  [clausify(39)].
kept:      104 -occupied(succ(A),B,out2) | -at(A,B,out2) | at(succ(A),B,out2) | gate(B) = out2 # label(out2_occupied) # label(axiom).  [clausify(39)].
kept:      105 -occupied(succ(A),B,out2) | -at(A,B,out2) | at(succ(A),B,out2) | open(A,in) # label(out2_occupied) # label(axiom).  [clausify(39)].
kept:      106 occupied(succ(A),B,out2) | -occupied(A,B,out2) | at(A,B,out2) # label(out2_occupied) # label(axiom).  [clausify(39)].
kept:      107 occupied(succ(A),B,out2) | -at(A,B,in) | gate(B) != out2 | -open(A,in) # label(out2_occupied) # label(axiom).  [clausify(39)].
kept:      108 -occupied(succ(A),B,s) | occupied(A,B,s) | at(A,B,in) # label(s_occupied) # label(axiom).  [clausify(40)].
kept:      109 -occupied(succ(A),B,s) | occupied(A,B,s) | open(A,in) # label(s_occupied) # label(axiom).  [clausify(40)].
kept:      110 -occupied(succ(A),B,s) | -at(A,B,s) | at(succ(A),B,s) | at(A,B,in) # label(s_occupied) # label(axiom).  [clausify(40)].
kept:      111 -occupied(succ(A),B,s) | -at(A,B,s) | at(succ(A),B,s) | open(A,in) # label(s_occupied) # label(axiom).  [clausify(40)].
kept:      112 occupied(succ(A),B,s) | -occupied(A,B,s) | at(A,B,s) # label(s_occupied) # label(axiom).  [clausify(40)].
kept:      113 occupied(succ(A),B,s) | -at(A,B,in) | gate(B) != out2 | -open(A,in) # label(s_occupied) # label(axiom).  [clausify(40)].
kept:      114 occupied(succ(A),B,s) | -at(A,B,in) | gate(B) != out1 | -open(A,in) # label(s_occupied) # label(axiom).  [clausify(40)].
kept:      115 -occupied(succ(A),B,out1) | occupied(A,B,out1) | at(A,B,in) # label(out1_occupied) # label(axiom).  [clausify(41)].
kept:      116 -occupied(succ(A),B,out1) | occupied(A,B,out1) | gate(B) = out1 # label(out1_occupied) # label(axiom).  [clausify(41)].
kept:      117 -occupied(succ(A),B,out1) | occupied(A,B,out1) | open(A,in) # label(out1_occupied) # label(axiom).  [clausify(41)].
kept:      118 -occupied(succ(A),B,out1) | -at(A,B,out1) | at(succ(A),B,out1) | at(A,B,in) # label(out1_occupied) # label(axiom).  [clausify(41)].
kept:      119 -occupied(succ(A),B,out1) | -at(A,B,out1) | at(succ(A),B,out1) | gate(B) = out1 # label(out1_occupied) # label(axiom).  [clausify(41)].
kept:      120 -occupied(succ(A),B,out1) | -at(A,B,out1) | at(succ(A),B,out1) | open(A,in) # label(out1_occupied) # label(axiom).  [clausify(41)].
kept:      121 occupied(succ(A),B,out1) | -occupied(A,B,out1) | at(A,B,out1) # label(out1_occupied) # label(axiom).  [clausify(41)].
kept:      122 occupied(succ(A),B,out1) | -at(A,B,in) | gate(B) != out1 | -open(A,in) # label(out1_occupied) # label(axiom).  [clausify(41)].
kept:      123 -path_open(A,B,C,D) | in = C # label(open_values) # label(axiom).  [clausify(42)].
kept:      124 -path_open(A,B,C,D) | out2 = D | out1 = D # label(open_values) # label(axiom).  [clausify(42)].
kept:      125 -path_open(A,B,in,out2) | at(A,B,in) # label(path_open_from_in_to_out2) # label(axiom).  [clausify(43)].
kept:      126 -path_open(A,B,in,out2) | gate(B) = out2 # label(path_open_from_in_to_out2) # label(axiom).  [clausify(43)].
kept:      127 -path_open(A,B,in,out2) | -occupied(A,C,in) | C = B # label(path_open_from_in_to_out2) # label(axiom).  [clausify(43)].
kept:      128 -path_open(A,B,in,out2) | -occupied(A,C,s) | C = B # label(path_open_from_in_to_out2) # label(axiom).  [clausify(43)].
kept:      129 -path_open(A,B,in,out2) | -occupied(A,C,out2) | C = B # label(path_open_from_in_to_out2) # label(axiom).  [clausify(43)].
kept:      130 path_open(A,B,in,out2) | -at(A,B,in) | gate(B) != out2 | occupied(A,C,in) | occupied(A,C,s) | occupied(A,C,out2) # label(path_open_from_in_to_out2) # label(axiom).  [clausify(43)].
           131 path_open(A,B,in,out2) | -at(A,B,in) | gate(B) != out2 | C != B # label(path_open_from_in_to_out2) # label(axiom).  [clausify(43)].
kept:      132 path_open(A,B,in,out2) | -at(A,B,in) | gate(B) != out2.  [copy(131),xx(d)].
kept:      133 -path_open(A,B,in,out1) | at(A,B,in) # label(path_open_from_in_to_out1) # label(axiom).  [clausify(44)].
kept:      134 -path_open(A,B,in,out1) | gate(B) = out1 # label(path_open_from_in_to_out1) # label(axiom).  [clausify(44)].
kept:      135 -path_open(A,B,in,out1) | -occupied(A,C,in) | C = B # label(path_open_from_in_to_out1) # label(axiom).  [clausify(44)].
kept:      136 -path_open(A,B,in,out1) | -occupied(A,C,s) | C = B # label(path_open_from_in_to_out1) # label(axiom).  [clausify(44)].
kept:      137 -path_open(A,B,in,out1) | -occupied(A,C,out1) | C = B # label(path_open_from_in_to_out1) # label(axiom).  [clausify(44)].
kept:      138 path_open(A,B,in,out1) | -at(A,B,in) | gate(B) != out1 | occupied(A,C,in) | occupied(A,C,s) | occupied(A,C,out1) # label(path_open_from_in_to_out1) # label(axiom).  [clausify(44)].
           139 path_open(A,B,in,out1) | -at(A,B,in) | gate(B) != out1 | C != B # label(path_open_from_in_to_out1) # label(axiom).  [clausify(44)].
kept:      140 path_open(A,B,in,out1) | -at(A,B,in) | gate(B) != out1.  [copy(139),xx(d)].
kept:      141 -open(A,in) | path_open(A,f15(A),in,gate(f15(A))) # label(open_in) # label(axiom).  [clausify(45)].
kept:      142 open(A,in) | -path_open(A,B,in,gate(B)) # label(open_in) # label(axiom).  [clausify(45)].
kept:      143 -safe(c1,c2) # label(collision_critical) # label(conjecture).  [deny(46)].
kept:      144 at(f5(A),f6(A),A) | -at(B,C,A) | open(B,A) | less(B,f4(A,B,C)).  [resolve(47,a,48,a)].
kept:      145 at(f5(A),f6(A),A) | -at(B,C,A) | open(B,A) | open(f4(A,B,C),A).  [resolve(47,a,49,a)].
kept:      146 -open(f5(A),A) | -at(B,C,A) | open(B,A) | less(B,f4(A,B,C)).  [resolve(50,a,48,a)].
kept:      147 -open(f5(A),A) | -at(B,C,A) | open(B,A) | open(f4(A,B,C),A).  [resolve(50,a,49,a)].
kept:      148 -less(f5(A),B) | -open(B,A) | -at(C,D,A) | open(C,A) | less(C,f4(A,C,D)).  [resolve(51,a,48,a)].
kept:      149 -less(f5(A),B) | -open(B,A) | -at(C,D,A) | open(C,A) | open(f4(A,C,D),A).  [resolve(51,a,49,a)].
kept:      150 -open(A,B) | at(f10(C,D,E,F,B),F,f11(C,D,E,F,B)) | enter(f10(C,D,E,F,B),F,f11(C,D,E,F,B)) | -node_empty(f10(C,D,E,F,B),B) | at(f12(C,D,E,F,B),F,f11(C,D,E,F,B)) | -less(f12(C,D,E,F,B),f10(C,D,E,F,B)) | enter(succ(C),D,E).  [resolve(52,b,53,d)].
kept:      151 in = A | -open(B,A).  [resolve(54,a,52,b)].
kept:      152 less(A,A).  [factor(57,a,b)].

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

% Clauses after input processing:

formulas(usable).
end_of_list.

formulas(sos).
55 -less(A,B) | -less(B,A) | B = A # label(antisymmetry) # label(axiom).  [clausify(1)].
56 -less(A,B) | -less(B,C) | less(A,C) # label(transitivity) # label(axiom).  [clausify(2)].
57 less(A,B) | less(B,A) # label(totality) # label(axiom).  [clausify(3)].
58 less(A,succ(A)) # label(succ) # label(axiom).  [clausify(4)].
59 less(A,B) | less(succ(B),A) # label(succ) # label(axiom).  [clausify(4)].
60 pred(succ(A)) = A # label(pred) # label(axiom).  [clausify(5)].
61 succ(pred(A)) = A # label(pred) # label(axiom).  [clausify(5)].
62 -at(A,B,C) | -at(A,B,D) | D = C # label(at_uniq) # label(axiom).  [clausify(6)].
63 -at(A,B,C) | -enter(A,B,D) # label(at_nondup) # label(axiom).  [clausify(7)].
64 -at(A,B,C) | -enter(A,D,C) # label(input_nocol) # label(axiom).  [clausify(8)].
65 -enter(A,B,C) | -enter(A,D,C) | D = B # label(enter_uniq) # label(axiom).  [clausify(9)].
66 -at(A,B,C) | occupied(A,B,C) # label(occupied) # label(axiom).  [clausify(10)].
67 -node_empty(A,B) | -at(A,C,B) # label(node_empty) # label(axiom).  [clausify(11)].
68 node_empty(A,B) | at(A,f1(A,B),B) # label(node_empty) # label(axiom).  [clausify(11)].
69 -safe(A,B) | -at(A,C,B) | -at(A,D,B) | D = C # label(node_safe) # label(axiom).  [clausify(12)].
70 safe(A,B) | at(A,f2(A,B),B) # label(node_safe) # label(axiom).  [clausify(12)].
71 safe(A,B) | at(A,f3(A,B),B) # label(node_safe) # label(axiom).  [clausify(12)].
72 safe(A,B) | f3(A,B) != f2(A,B) # label(node_safe) # label(axiom).  [clausify(12)].
73 -at(A,B,C) | less(A,f7(A,B,C)) # label(train_will_move) # label(axiom).  [clausify(14)].
74 -at(A,B,C) | enter(f8(A,B,C),B,f9(A,B,C)) # label(train_entered) # label(axiom).  [clausify(15)].
75 -at(A,B,C) | less(f8(A,B,C),A) # label(train_entered) # label(axiom).  [clausify(15)].
76 -occupied(A,B,C) | -occupied(A,D,C) | D = B # label(occupied_only_once) # label(axiom).  [clausify(16)].
77 node_empty(A,B) | switch(A,B) != C | switch(succ(A),B) = C # label(switch_restr) # label(axiom).  [clausify(17)].
78 -at(A,B,C) | out2 = C | s = C | in = C | out1 = C # label(at_restr) # label(axiom).  [clausify(20)].
79 gate(A) = out2 | gate(A) = out1 # label(gate_restr) # label(axiom).  [clausify(23)].
80 s != out2 # label(distinct_nodes) # label(axiom).  [clausify(24)].
82 out2 != in.  [copy(81),flip(a)].
84 out2 != out1.  [copy(83),flip(a)].
86 s != in.  [copy(85),flip(a)].
88 s != out1.  [copy(87),flip(a)].
89 out1 != in # label(distinct_nodes) # label(axiom).  [clausify(24)].
90 -occupied(A,B,C) | out2 = C | s = C | in = C | out1 = C # label(occupied_values) # label(axiom).  [clausify(25)].
91 -enter(A,B,C) | in = C # label(enter_values) # label(axiom).  [clausify(26)].
92 switch(A,s) = out1 | switch(A,s) = out2 # label(switch_s_value) # label(axiom).  [clausify(27)].
93 switch(A,in) = s # label(switch_in_value) # label(axiom).  [clausify(28)].
95 -occupied(A,B,s) | gate(B) != out2 | switch(A,s) = out2 # label(switch_s_out2) # label(axiom).  [clausify(30)].
97 -occupied(A,B,s) | gate(B) != out1 | switch(A,s) = out1 # label(switch_s_out1) # label(axiom).  [clausify(32)].
98 -enter(f13(A,B),f14(A,B),in) | at(succ(A),B,in) # label(move_input_no_change_in) # label(axiom).  [clausify(33)].
99 -at(f13(A,B),f14(A,B),in) | open(f13(A,B),in) | at(succ(A),B,in) # label(move_input_no_change_in) # label(axiom).  [clausify(33)].
100 -occupied(succ(A),B,out2) | occupied(A,B,out2) | at(A,B,in) # label(out2_occupied) # label(axiom).  [clausify(39)].
101 -occupied(succ(A),B,out2) | occupied(A,B,out2) | gate(B) = out2 # label(out2_occupied) # label(axiom).  [clausify(39)].
102 -occupied(succ(A),B,out2) | occupied(A,B,out2) | open(A,in) # label(out2_occupied) # label(axiom).  [clausify(39)].
103 -occupied(succ(A),B,out2) | -at(A,B,out2) | at(succ(A),B,out2) | at(A,B,in) # label(out2_occupied) # label(axiom).  [clausify(39)].
104 -occupied(succ(A),B,out2) | -at(A,B,out2) | at(succ(A),B,out2) | gate(B) = out2 # label(out2_occupied) # label(axiom).  [clausify(39)].
105 -occupied(succ(A),B,out2) | -at(A,B,out2) | at(succ(A),B,out2) | open(A,in) # label(out2_occupied) # label(axiom).  [clausify(39)].
106 occupied(succ(A),B,out2) | -occupied(A,B,out2) | at(A,B,out2) # label(out2_occupied) # label(axiom).  [clausify(39)].
107 occupied(succ(A),B,out2) | -at(A,B,in) | gate(B) != out2 | -open(A,in) # label(out2_occupied) # label(axiom).  [clausify(39)].
108 -occupied(succ(A),B,s) | occupied(A,B,s) | at(A,B,in) # label(s_occupied) # label(axiom).  [clausify(40)].
109 -occupied(succ(A),B,s) | occupied(A,B,s) | open(A,in) # label(s_occupied) # label(axiom).  [clausify(40)].
110 -occupied(succ(A),B,s) | -at(A,B,s) | at(succ(A),B,s) | at(A,B,in) # label(s_occupied) # label(axiom).  [clausify(40)].
111 -occupied(succ(A),B,s) | -at(A,B,s) | at(succ(A),B,s) | open(A,in) # label(s_occupied) # label(axiom).  [clausify(40)].
112 occupied(succ(A),B,s) | -occupied(A,B,s) | at(A,B,s) # label(s_occupied) # label(axiom).  [clausify(40)].
113 occupied(succ(A),B,s) | -at(A,B,in) | gate(B) != out2 | -open(A,in) # label(s_occupied) # label(axiom).  [clausify(40)].
114 occupied(succ(A),B,s) | -at(A,B,in) | gate(B) != out1 | -open(A,in) # label(s_occupied) # label(axiom).  [clausify(40)].
115 -occupied(succ(A),B,out1) | occupied(A,B,out1) | at(A,B,in) # label(out1_occupied) # label(axiom).  [clausify(41)].
116 -occupied(succ(A),B,out1) | occupied(A,B,out1) | gate(B) = out1 # label(out1_occupied) # label(axiom).  [clausify(41)].
117 -occupied(succ(A),B,out1) | occupied(A,B,out1) | open(A,in) # label(out1_occupied) # label(axiom).  [clausify(41)].
118 -occupied(succ(A),B,out1) | -at(A,B,out1) | at(succ(A),B,out1) | at(A,B,in) # label(out1_occupied) # label(axiom).  [clausify(41)].
119 -occupied(succ(A),B,out1) | -at(A,B,out1) | at(succ(A),B,out1) | gate(B) = out1 # label(out1_occupied) # label(axiom).  [clausify(41)].
120 -occupied(succ(A),B,out1) | -at(A,B,out1) | at(succ(A),B,out1) | open(A,in) # label(out1_occupied) # label(axiom).  [clausify(41)].
121 occupied(succ(A),B,out1) | -occupied(A,B,out1) | at(A,B,out1) # label(out1_occupied) # label(axiom).  [clausify(41)].
122 occupied(succ(A),B,out1) | -at(A,B,in) | gate(B) != out1 | -open(A,in) # label(out1_occupied) # label(axiom).  [clausify(41)].
123 -path_open(A,B,C,D) | in = C # label(open_values) # label(axiom).  [clausify(42)].
124 -path_open(A,B,C,D) | out2 = D | out1 = D # label(open_values) # label(axiom).  [clausify(42)].
125 -path_open(A,B,in,out2) | at(A,B,in) # label(path_open_from_in_to_out2) # label(axiom).  [clausify(43)].
126 -path_open(A,B,in,out2) | gate(B) = out2 # label(path_open_from_in_to_out2) # label(axiom).  [clausify(43)].
127 -path_open(A,B,in,out2) | -occupied(A,C,in) | C = B # label(path_open_from_in_to_out2) # label(axiom).  [clausify(43)].
128 -path_open(A,B,in,out2) | -occupied(A,C,s) | C = B # label(path_open_from_in_to_out2) # label(axiom).  [clausify(43)].
129 -path_open(A,B,in,out2) | -occupied(A,C,out2) | C = B # label(path_open_from_in_to_out2) # label(axiom).  [clausify(43)].
132 path_open(A,B,in,out2) | -at(A,B,in) | gate(B) != out2.  [copy(131),xx(d)].
133 -path_open(A,B,in,out1) | at(A,B,in) # label(path_open_from_in_to_out1) # label(axiom).  [clausify(44)].
134 -path_open(A,B,in,out1) | gate(B) = out1 # label(path_open_from_in_to_out1) # label(axiom).  [clausify(44)].
135 -path_open(A,B,in,out1) | -occupied(A,C,in) | C = B # label(path_open_from_in_to_out1) # label(axiom).  [clausify(44)].
136 -path_open(A,B,in,out1) | -occupied(A,C,s) | C = B # label(path_open_from_in_to_out1) # label(axiom).  [clausify(44)].
137 -path_open(A,B,in,out1) | -occupied(A,C,out1) | C = B # label(path_open_from_in_to_out1) # label(axiom).  [clausify(44)].
140 path_open(A,B,in,out1) | -at(A,B,in) | gate(B) != out1.  [copy(139),xx(d)].
141 -open(A,in) | path_open(A,f15(A),in,gate(f15(A))) # label(open_in) # label(axiom).  [clausify(45)].
142 open(A,in) | -path_open(A,B,in,gate(B)) # label(open_in) # label(axiom).  [clausify(45)].
143 -safe(c1,c2) # label(collision_critical) # label(conjecture).  [deny(46)].
144 at(f5(A),f6(A),A) | -at(B,C,A) | open(B,A) | less(B,f4(A,B,C)).  [resolve(47,a,48,a)].
145 at(f5(A),f6(A),A) | -at(B,C,A) | open(B,A) | open(f4(A,B,C),A).  [resolve(47,a,49,a)].
146 -open(f5(A),A) | -at(B,C,A) | open(B,A) | less(B,f4(A,B,C)).  [resolve(50,a,48,a)].
147 -open(f5(A),A) | -at(B,C,A) | open(B,A) | open(f4(A,B,C),A).  [resolve(50,a,49,a)].
148 -less(f5(A),B) | -open(B,A) | -at(C,D,A) | open(C,A) | less(C,f4(A,C,D)).  [resolve(51,a,48,a)].
149 -less(f5(A),B) | -open(B,A) | -at(C,D,A) | open(C,A) | open(f4(A,C,D),A).  [resolve(51,a,49,a)].
150 -open(A,B) | at(f10(C,D,E,F,B),F,f11(C,D,E,F,B)) | enter(f10(C,D,E,F,B),F,f11(C,D,E,F,B)) | -node_empty(f10(C,D,E,F,B),B) | at(f12(C,D,E,F,B),F,f11(C,D,E,F,B)) | -less(f12(C,D,E,F,B),f10(C,D,E,F,B)) | enter(succ(C),D,E).  [resolve(52,b,53,d)].
151 in = A | -open(B,A).  [resolve(54,a,52,b)].
152 less(A,A).  [factor(57,a,b)].
end_of_list.

formulas(demodulators).
60 pred(succ(A)) = A # label(pred) # label(axiom).  [clausify(5)].
61 succ(pred(A)) = A # label(pred) # label(axiom).  [clausify(5)].
93 switch(A,in) = s # label(switch_in_value) # label(axiom).  [clausify(28)].
end_of_list.

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.01 seconds.

given #1 (I,wt=9): 55 -less(A,B) | -less(B,A) | B = A # label(antisymmetry) # label(axiom).  [clausify(1)].

given #2 (I,wt=9): 56 -less(A,B) | -less(B,C) | less(A,C) # label(transitivity) # label(axiom).  [clausify(2)].

given #3 (I,wt=6): 57 less(A,B) | less(B,A) # label(totality) # label(axiom).  [clausify(3)].

given #4 (I,wt=4): 58 less(A,succ(A)) # label(succ) # label(axiom).  [clausify(4)].

given #5 (I,wt=7): 59 less(A,B) | less(succ(B),A) # label(succ) # label(axiom).  [clausify(4)].

given #6 (I,wt=5): 60 pred(succ(A)) = A # label(pred) # label(axiom).  [clausify(5)].

given #7 (I,wt=5): 61 succ(pred(A)) = A # label(pred) # label(axiom).  [clausify(5)].

given #8 (I,wt=11): 62 -at(A,B,C) | -at(A,B,D) | D = C # label(at_uniq) # label(axiom).  [clausify(6)].

given #9 (I,wt=8): 63 -at(A,B,C) | -enter(A,B,D) # label(at_nondup) # label(axiom).  [clausify(7)].

given #10 (I,wt=8): 64 -at(A,B,C) | -enter(A,D,C) # label(input_nocol) # label(axiom).  [clausify(8)].

given #11 (I,wt=11): 65 -enter(A,B,C) | -enter(A,D,C) | D = B # label(enter_uniq) # label(axiom).  [clausify(9)].

given #12 (I,wt=8): 66 -at(A,B,C) | occupied(A,B,C) # label(occupied) # label(axiom).  [clausify(10)].

given #13 (I,wt=7): 67 -node_empty(A,B) | -at(A,C,B) # label(node_empty) # label(axiom).  [clausify(11)].

given #14 (I,wt=9): 68 node_empty(A,B) | at(A,f1(A,B),B) # label(node_empty) # label(axiom).  [clausify(11)].

given #15 (I,wt=14): 69 -safe(A,B) | -at(A,C,B) | -at(A,D,B) | D = C # label(node_safe) # label(axiom).  [clausify(12)].

given #16 (I,wt=9): 70 safe(A,B) | at(A,f2(A,B),B) # label(node_safe) # label(axiom).  [clausify(12)].

given #17 (I,wt=9): 71 safe(A,B) | at(A,f3(A,B),B) # label(node_safe) # label(axiom).  [clausify(12)].

given #18 (I,wt=10): 72 safe(A,B) | f3(A,B) != f2(A,B) # label(node_safe) # label(axiom).  [clausify(12)].

given #19 (I,wt=10): 73 -at(A,B,C) | less(A,f7(A,B,C)) # label(train_will_move) # label(axiom).  [clausify(14)].

given #20 (I,wt=14): 74 -at(A,B,C) | enter(f8(A,B,C),B,f9(A,B,C)) # label(train_entered) # label(axiom).  [clausify(15)].

given #21 (I,wt=10): 75 -at(A,B,C) | less(f8(A,B,C),A) # label(train_entered) # label(axiom).  [clausify(15)].

given #22 (I,wt=11): 76 -occupied(A,B,C) | -occupied(A,D,C) | D = B # label(occupied_only_once) # label(axiom).  [clausify(16)].

given #23 (I,wt=14): 77 node_empty(A,B) | switch(A,B) != C | switch(succ(A),B) = C # label(switch_restr) # label(axiom).  [clausify(17)].

given #24 (I,wt=16): 78 -at(A,B,C) | out2 = C | s = C | in = C | out1 = C # label(at_restr) # label(axiom).  [clausify(20)].

given #25 (I,wt=8): 79 gate(A) = out2 | gate(A) = out1 # label(gate_restr) # label(axiom).  [clausify(23)].

given #26 (I,wt=3): 80 s != out2 # label(distinct_nodes) # label(axiom).  [clausify(24)].

given #27 (I,wt=3): 82 out2 != in.  [copy(81),flip(a)].

given #28 (I,wt=3): 84 out2 != out1.  [copy(83),flip(a)].

given #29 (I,wt=3): 86 s != in.  [copy(85),flip(a)].

given #30 (I,wt=3): 88 s != out1.  [copy(87),flip(a)].

given #31 (I,wt=3): 89 out1 != in # label(distinct_nodes) # label(axiom).  [clausify(24)].

given #32 (I,wt=16): 90 -occupied(A,B,C) | out2 = C | s = C | in = C | out1 = C # label(occupied_values) # label(axiom).  [clausify(25)].

given #33 (I,wt=7): 91 -enter(A,B,C) | in = C # label(enter_values) # label(axiom).  [clausify(26)].

given #34 (I,wt=10): 92 switch(A,s) = out1 | switch(A,s) = out2 # label(switch_s_value) # label(axiom).  [clausify(27)].

given #35 (I,wt=5): 93 switch(A,in) = s # label(switch_in_value) # label(axiom).  [clausify(28)].

given #36 (I,wt=13): 95 -occupied(A,B,s) | gate(B) != out2 | switch(A,s) = out2 # label(switch_s_out2) # label(axiom).  [clausify(30)].

given #37 (I,wt=13): 97 -occupied(A,B,s) | gate(B) != out1 | switch(A,s) = out1 # label(switch_s_out1) # label(axiom).  [clausify(32)].

given #38 (I,wt=13): 98 -enter(f13(A,B),f14(A,B),in) | at(succ(A),B,in) # label(move_input_no_change_in) # label(axiom).  [clausify(33)].

given #39 (I,wt=18): 99 -at(f13(A,B),f14(A,B),in) | open(f13(A,B),in) | at(succ(A),B,in) # label(move_input_no_change_in) # label(axiom).  [clausify(33)].

given #40 (I,wt=13): 100 -occupied(succ(A),B,out2) | occupied(A,B,out2) | at(A,B,in) # label(out2_occupied) # label(axiom).  [clausify(39)].

given #41 (I,wt=13): 101 -occupied(succ(A),B,out2) | occupied(A,B,out2) | gate(B) = out2 # label(out2_occupied) # label(axiom).  [clausify(39)].

given #42 (I,wt=12): 102 -occupied(succ(A),B,out2) | occupied(A,B,out2) | open(A,in) # label(out2_occupied) # label(axiom).  [clausify(39)].

given #43 (I,wt=18): 103 -occupied(succ(A),B,out2) | -at(A,B,out2) | at(succ(A),B,out2) | at(A,B,in) # label(out2_occupied) # label(axiom).  [clausify(39)].

given #44 (I,wt=18): 104 -occupied(succ(A),B,out2) | -at(A,B,out2) | at(succ(A),B,out2) | gate(B) = out2 # label(out2_occupied) # label(axiom).  [clausify(39)].

given #45 (I,wt=17): 105 -occupied(succ(A),B,out2) | -at(A,B,out2) | at(succ(A),B,out2) | open(A,in) # label(out2_occupied) # label(axiom).  [clausify(39)].

given #46 (I,wt=13): 106 occupied(succ(A),B,out2) | -occupied(A,B,out2) | at(A,B,out2) # label(out2_occupied) # label(axiom).  [clausify(39)].

given #47 (I,wt=16): 107 occupied(succ(A),B,out2) | -at(A,B,in) | gate(B) != out2 | -open(A,in) # label(out2_occupied) # label(axiom).  [clausify(39)].

given #48 (I,wt=13): 108 -occupied(succ(A),B,s) | occupied(A,B,s) | at(A,B,in) # label(s_occupied) # label(axiom).  [clausify(40)].

given #49 (I,wt=12): 109 -occupied(succ(A),B,s) | occupied(A,B,s) | open(A,in) # label(s_occupied) # label(axiom).  [clausify(40)].

given #50 (I,wt=18): 110 -occupied(succ(A),B,s) | -at(A,B,s) | at(succ(A),B,s) | at(A,B,in) # label(s_occupied) # label(axiom).  [clausify(40)].

given #51 (I,wt=17): 111 -occupied(succ(A),B,s) | -at(A,B,s) | at(succ(A),B,s) | open(A,in) # label(s_occupied) # label(axiom).  [clausify(40)].

given #52 (I,wt=13): 112 occupied(succ(A),B,s) | -occupied(A,B,s) | at(A,B,s) # label(s_occupied) # label(axiom).  [clausify(40)].

given #53 (I,wt=16): 113 occupied(succ(A),B,s) | -at(A,B,in) | gate(B) != out2 | -open(A,in) # label(s_occupied) # label(axiom).  [clausify(40)].

given #54 (I,wt=16): 114 occupied(succ(A),B,s) | -at(A,B,in) | gate(B) != out1 | -open(A,in) # label(s_occupied) # label(axiom).  [clausify(40)].

given #55 (I,wt=13): 115 -occupied(succ(A),B,out1) | occupied(A,B,out1) | at(A,B,in) # label(out1_occupied) # label(axiom).  [clausify(41)].

given #56 (I,wt=13): 116 -occupied(succ(A),B,out1) | occupied(A,B,out1) | gate(B) = out1 # label(out1_occupied) # label(axiom).  [clausify(41)].

given #57 (I,wt=12): 117 -occupied(succ(A),B,out1) | occupied(A,B,out1) | open(A,in) # label(out1_occupied) # label(axiom).  [clausify(41)].

given #58 (I,wt=18): 118 -occupied(succ(A),B,out1) | -at(A,B,out1) | at(succ(A),B,out1) | at(A,B,in) # label(out1_occupied) # label(axiom).  [clausify(41)].

given #59 (I,wt=18): 119 -occupied(succ(A),B,out1) | -at(A,B,out1) | at(succ(A),B,out1) | gate(B) = out1 # label(out1_occupied) # label(axiom).  [clausify(41)].

given #60 (I,wt=17): 120 -occupied(succ(A),B,out1) | -at(A,B,out1) | at(succ(A),B,out1) | open(A,in) # label(out1_occupied) # label(axiom).  [clausify(41)].

given #61 (I,wt=13): 121 occupied(succ(A),B,out1) | -occupied(A,B,out1) | at(A,B,out1) # label(out1_occupied) # label(axiom).  [clausify(41)].

given #62 (I,wt=16): 122 occupied(succ(A),B,out1) | -at(A,B,in) | gate(B) != out1 | -open(A,in) # label(out1_occupied) # label(axiom).  [clausify(41)].

given #63 (I,wt=8): 123 -path_open(A,B,C,D) | in = C # label(open_values) # label(axiom).  [clausify(42)].

given #64 (I,wt=11): 124 -path_open(A,B,C,D) | out2 = D | out1 = D # label(open_values) # label(axiom).  [clausify(42)].

given #65 (I,wt=9): 125 -path_open(A,B,in,out2) | at(A,B,in) # label(path_open_from_in_to_out2) # label(axiom).  [clausify(43)].

given #66 (I,wt=9): 126 -path_open(A,B,in,out2) | gate(B) = out2 # label(path_open_from_in_to_out2) # label(axiom).  [clausify(43)].

given #67 (I,wt=12): 127 -path_open(A,B,in,out2) | -occupied(A,C,in) | C = B # label(path_open_from_in_to_out2) # label(axiom).  [clausify(43)].

given #68 (I,wt=12): 128 -path_open(A,B,in,out2) | -occupied(A,C,s) | C = B # label(path_open_from_in_to_out2) # label(axiom).  [clausify(43)].

given #69 (I,wt=12): 129 -path_open(A,B,in,out2) | -occupied(A,C,out2) | C = B # label(path_open_from_in_to_out2) # label(axiom).  [clausify(43)].

given #70 (I,wt=13): 132 path_open(A,B,in,out2) | -at(A,B,in) | gate(B) != out2.  [copy(131),xx(d)].

given #71 (I,wt=9): 133 -path_open(A,B,in,out1) | at(A,B,in) # label(path_open_from_in_to_out1) # label(axiom).  [clausify(44)].

given #72 (I,wt=9): 134 -path_open(A,B,in,out1) | gate(B) = out1 # label(path_open_from_in_to_out1) # label(axiom).  [clausify(44)].

given #73 (I,wt=12): 135 -path_open(A,B,in,out1) | -occupied(A,C,in) | C = B # label(path_open_from_in_to_out1) # label(axiom).  [clausify(44)].

given #74 (I,wt=12): 136 -path_open(A,B,in,out1) | -occupied(A,C,s) | C = B # label(path_open_from_in_to_out1) # label(axiom).  [clausify(44)].

given #75 (I,wt=12): 137 -path_open(A,B,in,out1) | -occupied(A,C,out1) | C = B # label(path_open_from_in_to_out1) # label(axiom).  [clausify(44)].

given #76 (I,wt=13): 140 path_open(A,B,in,out1) | -at(A,B,in) | gate(B) != out1.  [copy(139),xx(d)].

given #77 (I,wt=11): 141 -open(A,in) | path_open(A,f15(A),in,gate(f15(A))) # label(open_in) # label(axiom).  [clausify(45)].

given #78 (I,wt=9): 142 open(A,in) | -path_open(A,B,in,gate(B)) # label(open_in) # label(axiom).  [clausify(45)].

given #79 (I,wt=3): 143 -safe(c1,c2) # label(collision_critical) # label(conjecture).  [deny(46)].

given #80 (I,wt=19): 144 at(f5(A),f6(A),A) | -at(B,C,A) | open(B,A) | less(B,f4(A,B,C)).  [resolve(47,a,48,a)].

given #81 (I,wt=19): 145 at(f5(A),f6(A),A) | -at(B,C,A) | open(B,A) | open(f4(A,B,C),A).  [resolve(47,a,49,a)].

given #82 (I,wt=17): 146 -open(f5(A),A) | -at(B,C,A) | open(B,A) | less(B,f4(A,B,C)).  [resolve(50,a,48,a)].

given #83 (I,wt=17): 147 -open(f5(A),A) | -at(B,C,A) | open(B,A) | open(f4(A,B,C),A).  [resolve(50,a,49,a)].

given #84 (I,wt=20): 148 -less(f5(A),B) | -open(B,A) | -at(C,D,A) | open(C,A) | less(C,f4(A,C,D)).  [resolve(51,a,48,a)].

given #85 (I,wt=20): 149 -less(f5(A),B) | -open(B,A) | -at(C,D,A) | open(C,A) | open(f4(A,C,D),A).  [resolve(51,a,49,a)].

given #86 (I,wt=71): 150 -open(A,B) | at(f10(C,D,E,F,B),F,f11(C,D,E,F,B)) | enter(f10(C,D,E,F,B),F,f11(C,D,E,F,B)) | -node_empty(f10(C,D,E,F,B),B) | at(f12(C,D,E,F,B),F,f11(C,D,E,F,B)) | -less(f12(C,D,E,F,B),f10(C,D,E,F,B)) | enter(succ(C),D,E).  [resolve(52,b,53,d)].

given #87 (I,wt=6): 151 in = A | -open(B,A).  [resolve(54,a,52,b)].

given #88 (I,wt=3): 152 less(A,A).  [factor(57,a,b)].

given #89 (A,wt=9): 153 less(A,B) | -less(C,B) | less(C,A).  [resolve(57,a,56,b)].

given #90 (F,wt=3): 252 -open(A,out1).  [ur(151,a,89,a(flip))].

given #91 (F,wt=3): 253 -open(A,s).  [ur(151,a,86,a(flip))].

given #92 (F,wt=3): 254 -open(A,out2).  [ur(151,a,82,a(flip))].

given #93 (F,wt=4): 188 -enter(A,B,out1).  [ur(91,b,89,a(flip))].

given #94 (T,wt=4): 163 less(pred(A),A).  [para(61(a,1),58(a,2))].

given #95 (T,wt=6): 169 safe(A,B) | -node_empty(A,B).  [resolve(70,b,67,b)].

given #96 (T,wt=7): 154 -less(A,B) | less(A,succ(B)).  [resolve(58,a,56,b)].

given #97 (T,wt=5): 263 less(pred(A),succ(A)).  [resolve(154,a,163,a)].

given #98 (A,wt=7): 155 -less(succ(A),B) | less(A,B).  [resolve(58,a,56,a)].

given #99 (F,wt=3): 262 -node_empty(c1,c2).  [ur(169,a,143,a)].

given #100 (F,wt=4): 189 -enter(A,B,s).  [ur(91,b,86,a(flip))].

given #101 (F,wt=4): 190 -enter(A,B,out2).  [ur(91,b,82,a(flip))].

given #102 (F,wt=5): 221 -path_open(A,B,out1,C).  [ur(123,b,89,a(flip))].

given #103 (T,wt=5): 265 less(A,succ(succ(A))).  [resolve(154,a,58,a)].

given #104 (T,wt=5): 271 less(pred(pred(A)),A).  [para(61(a,1),263(a,2))].

given #105 (T,wt=6): 266 less(pred(A),succ(succ(A))).  [resolve(263,a,154,a)].

given #106 (T,wt=6): 272 less(A,succ(succ(succ(A)))).  [resolve(265,a,155,a)].

given #107 (A,wt=8): 156 -less(succ(A),A) | succ(A) = A.  [resolve(58,a,55,b),flip(b)].

given #108 (F,wt=5): 222 -path_open(A,B,s,C).  [ur(123,b,86,a(flip))].

given #109 (F,wt=5): 223 -path_open(A,B,out2,C).  [ur(123,b,82,a(flip))].

given #110 (F,wt=5): 224 -path_open(A,B,C,in).  [ur(124,b,82,a,c,89,a)].

given #111 (F,wt=5): 225 -path_open(A,B,C,s).  [ur(124,b,80,a(flip),c,88,a(flip))].

given #112 (T,wt=6): 277 less(pred(pred(A)),succ(A)).  [resolve(271,a,154,a)].

given #113 (T,wt=6): 297 less(pred(pred(pred(A))),A).  [para(61(a,1),277(a,2))].

given #114 (T,wt=7): 164 less(A,pred(B)) | less(B,A).  [para(61(a,1),59(b,1))].

given #115 (T,wt=7): 256 less(A,succ(B)) | less(B,A).  [resolve(153,b,58,a)].

given #116 (A,wt=10): 157 less(succ(A),B) | -less(C,B) | less(C,A).  [resolve(59,a,56,b)].

given #117 (F,wt=7): 233 f3(c1,c2) != f2(c1,c2).  [ur(72,a,143,a)].

given #118 (T,wt=7): 258 less(A,B) | less(pred(B),A).  [resolve(163,a,153,b)].

given #119 (T,wt=7): 259 -less(A,pred(B)) | less(A,B).  [resolve(163,a,56,b)].

given #120 (T,wt=7): 260 -less(A,B) | less(pred(A),B).  [resolve(163,a,56,a)].

given #121 (T,wt=7): 282 less(pred(A),succ(succ(succ(A)))).  [resolve(266,a,154,a)].

given #122 (A,wt=10): 158 less(succ(A),B) | -less(A,C) | less(B,C).  [resolve(59,a,56,a)].

given #123 (T,wt=7): 287 less(A,succ(succ(succ(succ(A))))).  [resolve(272,a,155,a)].

given #124 (T,wt=7): 292 less(pred(pred(A)),succ(succ(A))).  [resolve(277,a,154,a)].

given #125 (T,wt=7): 298 less(pred(pred(pred(A))),succ(A)).  [resolve(297,a,154,a)].

given #126 (T,wt=7): 336 less(pred(pred(pred(pred(A)))),A).  [resolve(259,a,297,a)].

given #127 (A,wt=10): 159 less(succ(A),B) | -less(A,B) | B = A.  [resolve(59,a,55,b)].

given #128 (T,wt=8): 261 -less(A,pred(A)) | pred(A) = A.  [resolve(163,a,55,b)].

given #129 (T,wt=8): 264 less(succ(A),succ(B)) | less(B,A).  [resolve(154,a,59,b)].

given #130 (T,wt=8): 267 less(A,succ(B)) | less(pred(B),A).  [resolve(263,a,153,b)].

given #131 (T,wt=8): 268 -less(A,pred(B)) | less(A,succ(B)).  [resolve(263,a,56,b)].

given #132 (A,wt=10): 160 less(succ(A),B) | -less(A,B) | A = B.  [resolve(59,a,55,a)].

given #133 (T,wt=8): 269 -less(succ(A),B) | less(pred(A),B).  [resolve(263,a,56,a)].

given #134 (T,wt=8): 273 less(A,succ(succ(B))) | less(B,A).  [resolve(265,a,153,b)].

given #135 (T,wt=8): 274 -less(A,B) | less(A,succ(succ(B))).  [resolve(265,a,56,b)].

given #136 (T,wt=8): 275 -less(succ(succ(A)),B) | less(A,B).  [resolve(265,a,56,a)].

given #137 (A,wt=10): 161 less(A,B) | -less(C,succ(B)) | less(C,A).  [resolve(59,b,56,b)].

given #138 (T,wt=8): 278 less(A,B) | less(pred(pred(B)),A).  [resolve(271,a,153,b)].

given #139 (T,wt=8): 279 -less(A,pred(pred(B))) | less(A,B).  [resolve(271,a,56,b)].

given #140 (T,wt=8): 280 -less(A,B) | less(pred(pred(A)),B).  [resolve(271,a,56,a)].

given #141 (T,wt=8): 303 less(A,succ(B)) | less(B,pred(A)).  [resolve(164,a,155,a)].

given #142 (A,wt=11): 162 less(A,B) | -less(A,succ(B)) | succ(B) = A.  [resolve(59,b,55,b)].

given #143 (T,wt=8): 311 less(A,succ(B)) | less(B,succ(A)).  [resolve(256,a,155,a)].

given #144 (T,wt=8): 327 less(succ(A),B) | less(pred(B),A).  [resolve(157,b,163,a)].

given #145 (T,wt=8): 330 less(pred(A),succ(B)) | less(B,A).  [resolve(258,a,155,a)].

given #146 (T,wt=8): 337 less(pred(A),B) | less(pred(B),A).  [resolve(259,a,258,b)].

given #147 (A,wt=9): 165 node_empty(A,B) | occupied(A,f1(A,B),B).  [resolve(68,b,66,a)].

given #148 (T,wt=8): 338 less(A,B) | less(pred(B),pred(A)).  [resolve(259,a,164,b)].

given #149 (T,wt=8): 339 less(pred(pred(A)),succ(succ(succ(A)))).  [resolve(282,a,260,a)].

given #150 (T,wt=8): 341 less(pred(A),succ(succ(succ(succ(A))))).  [resolve(282,a,154,a)].

given #151 (T,wt=8): 349 less(A,succ(succ(succ(succ(succ(A)))))).  [resolve(287,a,155,a)].

given #152 (A,wt=12): 166 node_empty(A,B) | -at(A,f1(A,B),C) | B = C.  [resolve(68,b,62,b)].

given #153 (T,wt=8): 354 less(pred(pred(pred(A))),succ(succ(A))).  [resolve(292,a,260,a)].

given #154 (T,wt=8): 360 less(pred(pred(pred(pred(A)))),succ(A)).  [resolve(298,a,260,a)].

given #155 (T,wt=8): 366 less(pred(pred(pred(pred(pred(A))))),A).  [resolve(336,a,260,a)].

given #156 (T,wt=9): 170 safe(A,B) | occupied(A,f2(A,B),B).  [resolve(70,b,66,a)].

given #157 (A,wt=12): 167 node_empty(A,B) | -at(A,f1(A,B),C) | C = B.  [resolve(68,b,62,a)].

given #158 (T,wt=9): 173 safe(A,B) | occupied(A,f3(A,B),B).  [resolve(71,b,66,a)].

given #159 (T,wt=9): 257 less(A,B) | less(C,A) | less(B,C).  [resolve(153,b,57,b)].

given #160 (T,wt=9): 283 less(A,succ(succ(B))) | less(pred(B),A).  [resolve(266,a,153,b)].

given #161 (T,wt=9): 284 -less(A,pred(B)) | less(A,succ(succ(B))).  [resolve(266,a,56,b)].

given #162 (A,wt=15): 168 -safe(A,B) | -at(A,C,B) | f1(A,B) = C | node_empty(A,B).  [resolve(69,b,68,b),flip(c)].

given #163 (T,wt=9): 285 -less(succ(succ(A)),B) | less(pred(A),B).  [resolve(266,a,56,a)].

given #164 (T,wt=9): 288 less(A,succ(succ(succ(B)))) | less(B,A).  [resolve(272,a,153,b)].

given #165 (T,wt=9): 289 -less(A,B) | less(A,succ(succ(succ(B)))).  [resolve(272,a,56,b)].

given #166 (T,wt=9): 290 -less(succ(succ(succ(A))),B) | less(A,B).  [resolve(272,a,56,a)].

given #167 (A,wt=12): 171 safe(A,B) | -at(A,f2(A,B),C) | B = C.  [resolve(70,b,62,b)].

given #168 (T,wt=9): 293 less(A,succ(B)) | less(pred(pred(B)),A).  [resolve(277,a,153,b)].

given #169 (T,wt=9): 294 -less(A,pred(pred(B))) | less(A,succ(B)).  [resolve(277,a,56,b)].

given #170 (T,wt=9): 295 -less(succ(A),B) | less(pred(pred(A)),B).  [resolve(277,a,56,a)].

given #171 (T,wt=9): 299 less(A,B) | less(pred(pred(pred(B))),A).  [resolve(297,a,153,b)].

given #172 (A,wt=12): 172 safe(A,B) | -at(A,f2(A,B),C) | C = B.  [resolve(70,b,62,a)].

given #173 (T,wt=9): 300 -less(A,pred(pred(pred(B)))) | less(A,B).  [resolve(297,a,56,b)].

given #174 (T,wt=9): 301 -less(A,B) | less(pred(pred(pred(A))),B).  [resolve(297,a,56,a)].

given #175 (T,wt=9): 319 less(succ(A),B) | less(pred(pred(B)),A).  [resolve(157,b,271,a)].

given #176 (T,wt=9): 321 less(succ(A),succ(succ(B))) | less(B,A).  [resolve(157,b,265,a)].

given #177 (A,wt=12): 174 safe(A,B) | -at(A,f3(A,B),C) | B = C.  [resolve(71,b,62,b)].

given #178 (T,wt=9): 322 less(succ(A),succ(B)) | less(pred(B),A).  [resolve(157,b,263,a)].

given #179 (T,wt=9): 387 less(pred(A),B) | less(pred(B),succ(A)).  [resolve(267,a,260,a)].

given #180 (T,wt=9): 390 less(pred(A),succ(B)) | less(B,succ(A)).  [resolve(267,a,155,a)].

given #181 (T,wt=9): 395 less(pred(pred(pred(pred(pred(A))))),succ(A)).  [resolve(268,a,336,a)].

given #182 (A,wt=12): 175 safe(A,B) | -at(A,f3(A,B),C) | C = B.  [resolve(71,b,62,a)].

given #183 (T,wt=9): 397 less(A,succ(B)) | less(pred(B),pred(A)).  [resolve(268,a,164,b)].

given #184 (T,wt=9): 400 less(pred(A),succ(succ(succ(succ(succ(A)))))).  [resolve(269,a,287,a)].

given #185 (T,wt=9): 402 less(A,B) | less(pred(B),succ(succ(A))).  [resolve(273,a,260,a)].

given #186 (T,wt=9): 405 less(A,succ(B)) | less(B,succ(succ(A))).  [resolve(273,a,155,a)].

given #187 (A,wt=11): 176 less(A,f7(A,f3(A,B),B)) | safe(A,B).  [resolve(73,a,71,b)].

given #188 (T,wt=8): 779 less(c1,f7(c1,f3(c1,c2),c2)).  [resolve(176,b,143,a)].

given #189 (T,wt=9): 410 less(pred(pred(pred(pred(A)))),succ(succ(A))).  [resolve(274,a,336,a)].

given #190 (T,wt=9): 411 less(pred(pred(pred(A))),succ(succ(succ(A)))).  [resolve(274,a,298,a)].

given #191 (T,wt=9): 412 less(pred(pred(A)),succ(succ(succ(succ(A))))).  [resolve(274,a,292,a)].

given #192 (A,wt=11): 177 less(A,f7(A,f2(A,B),B)) | safe(A,B).  [resolve(73,a,70,b)].

given #193 (T,wt=8): 809 less(c1,f7(c1,f2(c1,c2),c2)).  [resolve(177,b,143,a)].

given #194 (T,wt=9): 413 less(A,succ(succ(succ(succ(succ(succ(A))))))).  [resolve(274,a,287,a)].

given #195 (T,wt=9): 415 less(A,succ(succ(B))) | less(B,pred(A)).  [resolve(274,a,164,b)].

given #196 (T,wt=9): 419 less(pred(pred(A)),B) | less(pred(B),A).  [resolve(278,a,260,a)].

given #197 (A,wt=11): 178 less(A,f7(A,f1(A,B),B)) | node_empty(A,B).  [resolve(73,a,68,b)].

given #198 (T,wt=8): 858 less(c1,f7(c1,f1(c1,c2),c2)).  [resolve(178,b,262,a)].

given #199 (T,wt=9): 422 less(pred(pred(A)),succ(B)) | less(B,A).  [resolve(278,a,155,a)].

given #200 (T,wt=9): 427 less(pred(pred(pred(pred(pred(pred(A)))))),A).  [resolve(279,a,336,a)].

given #201 (T,wt=9): 429 less(A,B) | less(pred(pred(B)),pred(A)).  [resolve(279,a,164,b)].

given #202 (A,wt=19): 179 enter(f8(A,f3(A,B),B),f3(A,B),f9(A,f3(A,B),B)) | safe(A,B).  [resolve(74,a,71,b)].

given #203 (T,wt=9): 784 less(pred(c1),f7(c1,f3(c1,c2),c2)).  [resolve(779,a,260,a)].

given #204 (T,wt=9): 788 less(c1,succ(f7(c1,f3(c1,c2),c2))).  [resolve(779,a,154,a)].

given #205 (T,wt=9): 814 less(pred(c1),f7(c1,f2(c1,c2),c2)).  [resolve(809,a,260,a)].

given #206 (T,wt=9): 818 less(c1,succ(f7(c1,f2(c1,c2),c2))).  [resolve(809,a,154,a)].

given #207 (A,wt=19): 180 enter(f8(A,f2(A,B),B),f2(A,B),f9(A,f2(A,B),B)) | safe(A,B).  [resolve(74,a,70,b)].

given #208 (T,wt=9): 865 less(pred(c1),f7(c1,f1(c1,c2),c2)).  [resolve(858,a,260,a)].

given #209 (T,wt=9): 869 less(c1,succ(f7(c1,f1(c1,c2),c2))).  [resolve(858,a,154,a)].

given #210 (T,wt=10): 255 less(A,B) | less(succ(C),A) | less(B,C).  [resolve(153,b,59,b)].

given #211 (T,wt=10): 270 -less(succ(A),pred(A)) | pred(A) = succ(A).  [resolve(263,a,55,b)].

given #212 (A,wt=19): 181 enter(f8(A,f1(A,B),B),f1(A,B),f9(A,f1(A,B),B)) | node_empty(A,B).  [resolve(74,a,68,b)].

given #213 (T,wt=10): 276 -less(succ(succ(A)),A) | succ(succ(A)) = A.  [resolve(265,a,55,b),flip(b)].

given #214 (T,wt=10): 281 -less(A,pred(pred(A))) | pred(pred(A)) = A.  [resolve(271,a,55,b)].

given #215 (T,wt=10): 304 less(A,B) | less(C,pred(A)) | less(B,C).  [resolve(164,a,153,b)].

given #216 (T,wt=10): 305 less(A,B) | -less(C,B) | less(C,pred(A)).  [resolve(164,a,56,b)].

given #217 (A,wt=11): 182 less(f8(A,f3(A,B),B),A) | safe(A,B).  [resolve(75,a,71,b)].

given #218 (T,wt=8): 1040 less(f8(c1,f3(c1,c2),c2),c1).  [resolve(182,b,143,a)].

given #219 (T,wt=9): 1046 less(pred(f8(c1,f3(c1,c2),c2)),c1).  [resolve(1040,a,260,a)].

given #220 (T,wt=9): 1050 less(f8(c1,f3(c1,c2),c2),succ(c1)).  [resolve(1040,a,154,a)].

given #221 (T,wt=10): 306 less(A,B) | -less(pred(A),C) | less(B,C).  [resolve(164,a,56,a)].

given #222 (A,wt=11): 183 less(f8(A,f2(A,B),B),A) | safe(A,B).  [resolve(75,a,70,b)].

given #223 (T,wt=8): 1083 less(f8(c1,f2(c1,c2),c2),c1).  [resolve(183,b,143,a)].

given #224 (T,wt=9): 1089 less(pred(f8(c1,f2(c1,c2),c2)),c1).  [resolve(1083,a,260,a)].

given #225 (T,wt=9): 1093 less(f8(c1,f2(c1,c2),c2),succ(c1)).  [resolve(1083,a,154,a)].

given #226 (T,wt=10): 308 less(A,pred(B)) | -less(C,B) | less(C,A).  [resolve(164,b,56,b)].

given #227 (A,wt=11): 184 less(f8(A,f1(A,B),B),A) | node_empty(A,B).  [resolve(75,a,68,b)].

given #228 (T,wt=8): 1139 less(f8(c1,f1(c1,c2),c2),c1).  [resolve(184,b,262,a)].

given #229 (T,wt=9): 1148 less(pred(f8(c1,f1(c1,c2),c2)),c1).  [resolve(1139,a,260,a)].

given #230 (T,wt=9): 1152 less(f8(c1,f1(c1,c2),c2),succ(c1)).  [resolve(1139,a,154,a)].

given #231 (T,wt=10): 309 less(A,pred(B)) | -less(A,B) | B = A.  [resolve(164,b,55,b)].

given #232 (A,wt=11): 185 node_empty(A,B) | switch(succ(A),B) = switch(A,B).  [resolve(77,b,61,a(flip)),rewrite([61(6)])].

given #233 (T,wt=8): 1203 switch(succ(c1),c2) = switch(c1,c2).  [resolve(185,a,262,a)].

given #234 (T,wt=10): 310 less(A,pred(B)) | -less(A,B) | A = B.  [resolve(164,b,55,a)].

given #235 (T,wt=10): 312 less(A,B) | less(C,succ(A)) | less(B,C).  [resolve(256,a,153,b)].

given #236 (T,wt=10): 313 less(A,B) | -less(C,B) | less(C,succ(A)).  [resolve(256,a,56,b)].

given #237 (A,wt=15): 186 out2 = A | s = A | in = A | out1 = A | safe(B,A).  [resolve(78,a,71,b)].

given #238 (T,wt=10): 314 less(A,B) | -less(succ(A),C) | less(B,C).  [resolve(256,a,56,a)].

given #239 (T,wt=10): 315 less(A,succ(B)) | -less(C,B) | less(C,A).  [resolve(256,b,56,b)].

given #240 (T,wt=10): 316 less(succ(A),B) | less(pred(pred(pred(B))),A).  [resolve(157,b,297,a)].

given #241 (T,wt=10): 317 less(succ(A),succ(B)) | less(pred(pred(B)),A).  [resolve(157,b,277,a)].

given #242 (A,wt=15): 187 out2 = A | s = A | in = A | out1 = A | node_empty(B,A).  [resolve(78,a,68,b)].

given #243 (T,wt=10): 318 less(succ(A),succ(succ(succ(B)))) | less(B,A).  [resolve(157,b,272,a)].

given #244 (T,wt=10): 320 less(succ(A),succ(succ(B))) | less(pred(B),A).  [resolve(157,b,266,a)].

given #245 (T,wt=10): 331 less(pred(A),B) | less(C,A) | less(B,C).  [resolve(258,a,153,b)].

given #246 (T,wt=10): 332 less(pred(A),B) | -less(C,B) | less(C,A).  [resolve(258,a,56,b)].

given #247 (A,wt=14): 191 switch(A,s) = out1 | node_empty(A,s) | switch(succ(A),s) = out2.  [resolve(92,b,77,b)].

given #248 (T,wt=10): 333 less(pred(A),B) | -less(A,C) | less(B,C).  [resolve(258,a,56,a)].

given #249 (T,wt=10): 335 less(A,B) | -less(C,pred(B)) | less(C,A).  [resolve(258,b,56,b)].

given #250 (T,wt=10): 342 less(A,succ(succ(succ(B)))) | less(pred(B),A).  [resolve(282,a,153,b)].

given #251 (T,wt=10): 343 -less(A,pred(B)) | less(A,succ(succ(succ(B)))).  [resolve(282,a,56,b)].

given #252 (A,wt=17): 192 switch(A,s) = out1 | node_empty(A,s) | out2 != B | switch(succ(A),s) = B.  [para(92(b,1),77(b,1))].

given #253 (T,wt=10): 344 -less(succ(succ(succ(A))),B) | less(pred(A),B).  [resolve(282,a,56,a)].

given #254 (T,wt=10): 350 less(A,succ(succ(succ(succ(B))))) | less(B,A).  [resolve(287,a,153,b)].

given #255 (T,wt=10): 351 -less(A,B) | less(A,succ(succ(succ(succ(B))))).  [resolve(287,a,56,b)].

given #256 (T,wt=10): 352 -less(succ(succ(succ(succ(A)))),B) | less(A,B).  [resolve(287,a,56,a)].

given #257 (A,wt=14): 193 -occupied(A,B,out2) | occupied(pred(A),B,out2) | at(pred(A),B,in).  [para(61(a,1),100(a,1))].

given #258 (T,wt=10): 356 less(A,succ(succ(B))) | less(pred(pred(B)),A).  [resolve(292,a,153,b)].

given #259 (T,wt=10): 357 -less(A,pred(pred(B))) | less(A,succ(succ(B))).  [resolve(292,a,56,b)].

given #260 (T,wt=10): 358 -less(succ(succ(A)),B) | less(pred(pred(A)),B).  [resolve(292,a,56,a)].

given #261 (T,wt=10): 362 less(A,succ(B)) | less(pred(pred(pred(B))),A).  [resolve(298,a,153,b)].

given #262 (A,wt=13): 194 -occupied(A,B,out2) | occupied(pred(A),B,out2) | gate(B) = out2.  [para(61(a,1),101(a,1))].

given #263 (T,wt=10): 363 -less(A,pred(pred(pred(B)))) | less(A,succ(B)).  [resolve(298,a,56,b)].

given #264 (T,wt=10): 364 -less(succ(A),B) | less(pred(pred(pred(A))),B).  [resolve(298,a,56,a)].

given #265 (T,wt=10): 368 less(A,B) | less(pred(pred(pred(pred(B)))),A).  [resolve(336,a,153,b)].

given #266 (T,wt=10): 369 -less(A,pred(pred(pred(pred(B))))) | less(A,B).  [resolve(336,a,56,b)].

given #267 (A,wt=13): 195 -occupied(A,B,out2) | occupied(pred(A),B,out2) | open(pred(A),in).  [para(61(a,1),102(a,1))].

given #268 (T,wt=10): 370 -less(A,B) | less(pred(pred(pred(pred(A)))),B).  [resolve(336,a,56,a)].

given #269 (T,wt=10): 396 less(pred(A),succ(B)) | less(pred(B),succ(A)).  [resolve(268,a,267,b)].

given #270 (T,wt=10): 401 less(A,succ(B)) | less(pred(B),succ(succ(A))).  [resolve(273,a,269,a)].

given #271 (T,wt=10): 414 less(A,succ(succ(B))) | less(B,succ(succ(A))).  [resolve(274,a,273,b)].

given #272 (A,wt=18): 196 -occupied(A,B,out2) | -at(pred(A),B,out2) | at(A,B,out2) | at(pred(A),B,in).  [para(61(a,1),103(a,1)),rewrite([61(7)])].

given #273 (T,wt=10): 417 less(pred(pred(A)),succ(succ(B))) | less(B,A).  [resolve(278,a,275,a)].

given #274 (T,wt=10): 418 less(pred(pred(A)),succ(B)) | less(pred(B),A).  [resolve(278,a,269,a)].

given #275 (T,wt=10): 428 less(pred(pred(A)),B) | less(pred(pred(B)),A).  [resolve(279,a,278,b)].

given #276 (T,wt=10): 430 less(A,pred(B)) | less(B,succ(succ(succ(A)))).  [resolve(303,a,274,a)].

given #277 (A,wt=17): 197 -occupied(A,B,out2) | -at(pred(A),B,out2) | at(A,B,out2) | gate(B) = out2.  [para(61(a,1),104(a,1)),rewrite([61(7)])].

given #278 (T,wt=10): 438 less(A,succ(B)) | less(pred(pred(B)),pred(A)).  [resolve(303,b,280,a)].

given #279 (T,wt=10): 439 less(A,succ(succ(B))) | less(pred(B),pred(A)).  [resolve(303,b,269,a)].

given #280 (T,wt=10): 448 less(A,succ(B)) | less(pred(pred(B)),succ(A)).  [resolve(311,a,280,a)].

given #281 (T,wt=10): 449 less(A,succ(succ(succ(B)))) | less(B,succ(A)).  [resolve(311,a,275,a)].

given #282 (A,wt=17): 198 -occupied(A,B,out2) | -at(pred(A),B,out2) | at(A,B,out2) | open(pred(A),in).  [para(61(a,1),105(a,1)),rewrite([61(7)])].

given #283 (T,wt=10): 450 less(A,succ(succ(B))) | less(pred(B),succ(A)).  [resolve(311,a,269,a)].

given #284 (T,wt=10): 467 less(A,B) | less(pred(pred(pred(B))),succ(A)).  [resolve(330,a,280,a)].

given #285 (T,wt=10): 468 less(A,B) | less(pred(B),succ(succ(succ(A)))).  [resolve(330,a,274,a)].

given #286 (T,wt=10): 474 less(pred(A),succ(B)) | less(pred(pred(B)),A).  [resolve(330,b,280,a)].

given #287 (A,wt=19): 199 occupied(succ(A),f3(A,in),out2) | gate(f3(A,in)) != out2 | -open(A,in) | safe(A,in).  [resolve(107,b,71,b)].

given #288 (T,wt=10): 475 less(pred(A),succ(succ(B))) | less(pred(B),A).  [resolve(330,b,269,a)].

given #289 (T,wt=10): 482 less(pred(A),B) | less(pred(pred(pred(B))),A).  [resolve(337,a,280,a)].

given #290 (T,wt=10): 499 less(pred(pred(pred(A))),pred(B)) | less(B,A).  [resolve(338,a,279,a)].

given #291 (T,wt=10): 515 less(pred(pred(pred(pred(A)))),succ(succ(succ(A)))).  [resolve(339,a,280,a)].

given #292 (A,wt=19): 200 occupied(succ(A),f2(A,in),out2) | gate(f2(A,in)) != out2 | -open(A,in) | safe(A,in).  [resolve(107,b,70,b)].

given #293 (T,wt=10): 516 less(pred(pred(A)),succ(succ(succ(succ(succ(A)))))).  [resolve(339,a,274,a)].

given #294 (T,wt=10): 522 less(pred(pred(pred(A))),succ(succ(succ(succ(A))))).  [resolve(341,a,280,a)].

given #295 (T,wt=10): 523 less(pred(A),succ(succ(succ(succ(succ(succ(A))))))).  [resolve(341,a,274,a)].

given #296 (T,wt=10): 529 less(A,succ(succ(succ(succ(succ(succ(succ(A)))))))).  [resolve(349,a,275,a)].

given #297 (A,wt=19): 201 occupied(succ(A),f1(A,in),out2) | gate(f1(A,in)) != out2 | -open(A,in) | node_empty(A,in).  [resolve(107,b,68,b)].

given #298 (T,wt=10): 535 less(pred(pred(pred(pred(pred(A))))),succ(succ(A))).  [resolve(354,a,280,a)].

given #299 (T,wt=10): 541 less(pred(pred(pred(pred(pred(pred(A)))))),succ(A)).  [resolve(360,a,280,a)].

given #300 (T,wt=10): 547 less(pred(pred(pred(pred(pred(pred(pred(A))))))),A).  [resolve(366,a,280,a)].

given #301 (T,wt=10): 782 less(pred(pred(c1)),f7(c1,f3(c1,c2),c2)).  [resolve(779,a,280,a)].

given #302 (A,wt=14): 202 -occupied(A,B,s) | occupied(pred(A),B,s) | at(pred(A),B,in).  [para(61(a,1),108(a,1))].

given #303 (T,wt=10): 783 less(c1,succ(succ(f7(c1,f3(c1,c2),c2)))).  [resolve(779,a,274,a)].

given #304 (T,wt=10): 812 less(pred(pred(c1)),f7(c1,f2(c1,c2),c2)).  [resolve(809,a,280,a)].

given #305 (T,wt=10): 813 less(c1,succ(succ(f7(c1,f2(c1,c2),c2)))).  [resolve(809,a,274,a)].

given #306 (T,wt=10): 863 less(pred(pred(c1)),f7(c1,f1(c1,c2),c2)).  [resolve(858,a,280,a)].

given #307 (A,wt=13): 203 -occupied(A,B,s) | occupied(pred(A),B,s) | open(pred(A),in).  [para(61(a,1),109(a,1))].

given #308 (T,wt=10): 864 less(c1,succ(succ(f7(c1,f1(c1,c2),c2)))).  [resolve(858,a,274,a)].

given #309 (T,wt=10): 915 less(pred(c1),succ(f7(c1,f3(c1,c2),c2))).  [resolve(784,a,154,a)].

given #310 (T,wt=10): 934 less(pred(c1),succ(f7(c1,f2(c1,c2),c2))).  [resolve(814,a,154,a)].

given #311 (T,wt=10): 957 less(pred(c1),succ(f7(c1,f1(c1,c2),c2))).  [resolve(865,a,154,a)].

given #312 (A,wt=18): 204 -occupied(A,B,s) | -at(pred(A),B,s) | at(A,B,s) | at(pred(A),B,in).  [para(61(a,1),110(a,1)),rewrite([61(7)])].

given #313 (T,wt=10): 1044 less(pred(pred(f8(c1,f3(c1,c2),c2))),c1).  [resolve(1040,a,280,a)].

given #314 (T,wt=10): 1045 less(f8(c1,f3(c1,c2),c2),succ(succ(c1))).  [resolve(1040,a,274,a)].

given #315 (T,wt=10): 1060 less(pred(f8(c1,f3(c1,c2),c2)),succ(c1)).  [resolve(1046,a,154,a)].

given #316 (T,wt=10): 1087 less(pred(pred(f8(c1,f2(c1,c2),c2))),c1).  [resolve(1083,a,280,a)].

given #317 (A,wt=17): 205 -occupied(A,B,s) | -at(pred(A),B,s) | at(A,B,s) | open(pred(A),in).  [para(61(a,1),111(a,1)),rewrite([61(7)])].

given #318 (T,wt=10): 1088 less(f8(c1,f2(c1,c2),c2),succ(succ(c1))).  [resolve(1083,a,274,a)].

given #319 (T,wt=10): 1103 less(pred(f8(c1,f2(c1,c2),c2)),succ(c1)).  [resolve(1089,a,154,a)].

given #320 (T,wt=10): 1146 less(pred(pred(f8(c1,f1(c1,c2),c2))),c1).  [resolve(1139,a,280,a)].

given #321 (T,wt=10): 1147 less(f8(c1,f1(c1,c2),c2),succ(succ(c1))).  [resolve(1139,a,274,a)].

given #322 (A,wt=19): 206 occupied(succ(A),f3(A,in),s) | gate(f3(A,in)) != out2 | -open(A,in) | safe(A,in).  [resolve(113,b,71,b)].

given #323 (T,wt=10): 1163 less(pred(f8(c1,f1(c1,c2),c2)),succ(c1)).  [resolve(1148,a,154,a)].

given #324 (T,wt=11): 307 less(A,B) | -less(pred(A),B) | pred(A) = B.  [resolve(164,a,55,b),flip(c)].

given #325 (T,wt=11): 323 less(succ(A),B) | less(C,A) | less(B,succ(C)).  [resolve(157,b,256,b)].

given #326 (T,wt=11): 324 less(succ(A),succ(B)) | less(C,A) | less(B,C).  [resolve(157,b,256,a)].

given #327 (A,wt=19): 207 occupied(succ(A),f2(A,in),s) | gate(f2(A,in)) != out2 | -open(A,in) | safe(A,in).  [resolve(113,b,70,b)].

given #328 (T,wt=11): 325 less(succ(A),B) | less(C,A) | less(B,pred(C)).  [resolve(157,b,164,b)].

given #329 (T,wt=11): 326 less(succ(A),pred(B)) | less(C,A) | less(B,C).  [resolve(157,b,164,a)].

given #330 (T,wt=11): 328 less(succ(A),B) | less(succ(C),A) | less(B,C).  [resolve(157,b,59,b)].

given #331 (T,wt=11): 329 less(pred(A),B) | less(succ(C),A) | less(B,C).  [resolve(258,a,157,b)].

given #332 (A,wt=19): 208 occupied(succ(A),f1(A,in),s) | gate(f1(A,in)) != out2 | -open(A,in) | node_empty(A,in).  [resolve(113,b,68,b)].

given #333 (T,wt=11): 334 less(A,B) | less(succ(C),A) | less(pred(B),C).  [resolve(258,b,157,b)].

given #334 (T,wt=11): 340 less(succ(A),succ(succ(succ(B)))) | less(pred(B),A).  [resolve(282,a,157,b)].

given #335 (T,wt=11): 346 less(succ(A),B) | less(B,C) | less(C,pred(A)).  [resolve(158,b,164,b)].

given #336 (T,wt=11): 347 less(succ(succ(A)),B) | less(B,C) | less(C,A).  [resolve(158,b,59,b)].

given #337 (A,wt=19): 209 occupied(succ(A),f3(A,in),s) | gate(f3(A,in)) != out1 | -open(A,in) | safe(A,in).  [resolve(114,b,71,b)].

given #338 (T,wt=11): 348 less(succ(A),succ(succ(succ(succ(B))))) | less(B,A).  [resolve(287,a,157,b)].

given #339 (T,wt=11): 355 less(succ(A),succ(succ(B))) | less(pred(pred(B)),A).  [resolve(292,a,157,b)].

given #340 (T,wt=11): 361 less(succ(A),succ(B)) | less(pred(pred(pred(B))),A).  [resolve(298,a,157,b)].

given #341 (T,wt=11): 367 less(succ(A),B) | less(pred(pred(pred(pred(B)))),A).  [resolve(336,a,157,b)].

given #342 (A,wt=19): 210 occupied(succ(A),f2(A,in),s) | gate(f2(A,in)) != out1 | -open(A,in) | safe(A,in).  [resolve(114,b,70,b)].

given #343 (T,wt=11): 372 less(succ(A),B) | B = A | less(B,pred(A)).  [resolve(159,b,164,b)].

given #344 (T,wt=11): 375 less(succ(A),B) | B = A | less(succ(B),A).  [resolve(159,b,59,a)].

given #345 (T,wt=11): 379 less(A,B) | -less(C,succ(B)) | less(C,succ(A)).  [resolve(264,a,56,b)].

given #346 (T,wt=11): 380 less(A,B) | -less(succ(A),C) | less(succ(B),C).  [resolve(264,a,56,a)].

given #347 (A,wt=19): 211 occupied(succ(A),f1(A,in),s) | gate(f1(A,in)) != out1 | -open(A,in) | node_empty(A,in).  [resolve(114,b,68,b)].

given #348 (T,wt=11): 383 less(succ(A),succ(B)) | -less(C,B) | less(C,A).  [resolve(264,b,56,b)].

given #349 (T,wt=11): 384 less(succ(A),succ(B)) | -less(A,C) | less(B,C).  [resolve(264,b,56,a)].

given #350 (T,wt=11): 385 less(succ(A),succ(B)) | -less(A,B) | B = A.  [resolve(264,b,55,b)].

given #351 (T,wt=11): 386 less(succ(A),succ(B)) | -less(A,B) | A = B.  [resolve(264,b,55,a)].

given #352 (A,wt=14): 212 -occupied(A,B,out1) | occupied(pred(A),B,out1) | at(pred(A),B,in).  [para(61(a,1),115(a,1))].

given #353 (T,wt=11): 391 less(pred(A),B) | less(C,succ(A)) | less(B,C).  [resolve(267,a,153,b)].

given #354 (T,wt=11): 392 less(pred(A),B) | -less(C,B) | less(C,succ(A)).  [resolve(267,a,56,b)].

given #355 (T,wt=11): 393 less(pred(A),B) | -less(succ(A),C) | less(B,C).  [resolve(267,a,56,a)].

given #356 (T,wt=11): 394 less(A,succ(B)) | -less(C,pred(B)) | less(C,A).  [resolve(267,b,56,b)].

given #357 (A,wt=13): 213 -occupied(A,B,out1) | occupied(pred(A),B,out1) | gate(B) = out1.  [para(61(a,1),116(a,1))].

given #358 (T,wt=11): 399 less(succ(A),B) | A = B | less(B,pred(A)).  [resolve(160,b,164,b)].

given #359 (T,wt=11): 406 less(A,B) | less(C,succ(succ(A))) | less(B,C).  [resolve(273,a,153,b)].

given #360 (T,wt=11): 407 less(A,B) | -less(C,B) | less(C,succ(succ(A))).  [resolve(273,a,56,b)].

given #361 (T,wt=11): 408 less(A,B) | -less(succ(succ(A)),C) | less(B,C).  [resolve(273,a,56,a)].

given #362 (A,wt=13): 214 -occupied(A,B,out1) | occupied(pred(A),B,out1) | open(pred(A),in).  [para(61(a,1),117(a,1))].

given #363 (T,wt=11): 409 less(A,succ(succ(B))) | -less(C,B) | less(C,A).  [resolve(273,b,56,b)].

given #364 (T,wt=11): 423 less(pred(pred(A)),B) | less(C,A) | less(B,C).  [resolve(278,a,153,b)].

given #365 (T,wt=11): 424 less(pred(pred(A)),B) | -less(C,B) | less(C,A).  [resolve(278,a,56,b)].

given #366 (T,wt=11): 425 less(pred(pred(A)),B) | -less(A,C) | less(B,C).  [resolve(278,a,56,a)].

given #367 (A,wt=18): 215 -occupied(A,B,out1) | -at(pred(A),B,out1) | at(A,B,out1) | at(pred(A),B,in).  [para(61(a,1),118(a,1)),rewrite([61(7)])].

given #368 (T,wt=11): 426 less(A,B) | -less(C,pred(pred(B))) | less(C,A).  [resolve(278,b,56,b)].

given #369 (T,wt=11): 434 less(A,pred(B)) | less(C,succ(A)) | less(B,C).  [resolve(303,a,153,b)].

given #370 (T,wt=11): 435 less(A,pred(B)) | -less(C,B) | less(C,succ(A)).  [resolve(303,a,56,b)].

given #371 (T,wt=11): 436 less(A,pred(B)) | -less(succ(A),C) | less(B,C).  [resolve(303,a,56,a)].

given #372 (A,wt=17): 216 -occupied(A,B,out1) | -at(pred(A),B,out1) | at(A,B,out1) | gate(B) = out1.  [para(61(a,1),119(a,1)),rewrite([61(7)])].

given #373 (T,wt=11): 441 less(A,succ(B)) | less(C,pred(A)) | less(B,C).  [resolve(303,b,153,b)].

given #374 (T,wt=11): 442 less(A,succ(B)) | -less(C,B) | less(C,pred(A)).  [resolve(303,b,56,b)].

given #375 (T,wt=11): 443 less(A,succ(B)) | -less(pred(A),C) | less(B,C).  [resolve(303,b,56,a)].

given #376 (T,wt=11): 452 less(A,succ(B)) | less(C,succ(A)) | less(B,C).  [resolve(311,a,153,b)].

given #377 (A,wt=17): 217 -occupied(A,B,out1) | -at(pred(A),B,out1) | at(A,B,out1) | open(pred(A),in).  [para(61(a,1),120(a,1)),rewrite([61(7)])].

given #378 (T,wt=11): 453 less(A,succ(B)) | -less(C,B) | less(C,succ(A)).  [resolve(311,a,56,b)].

given #379 (T,wt=11): 454 less(A,succ(B)) | -less(succ(A),C) | less(B,C).  [resolve(311,a,56,a)].

given #380 (T,wt=11): 459 less(pred(A),B) | -less(C,succ(B)) | less(C,A).  [resolve(327,a,56,b)].

given #381 (T,wt=11): 460 less(pred(A),B) | -less(A,C) | less(succ(B),C).  [resolve(327,a,56,a)].

given #382 (A,wt=19): 218 occupied(succ(A),f3(A,in),out1) | gate(f3(A,in)) != out1 | -open(A,in) | safe(A,in).  [resolve(122,b,71,b)].

given #383 (T,wt=11): 464 less(succ(A),B) | -less(C,pred(B)) | less(C,A).  [resolve(327,b,56,b)].

given #384 (T,wt=11): 465 less(succ(A),B) | -less(A,C) | less(pred(B),C).  [resolve(327,b,56,a)].

given #385 (T,wt=11): 470 less(A,B) | less(C,succ(A)) | less(pred(B),C).  [resolve(330,a,153,b)].

given #386 (T,wt=11): 471 less(A,B) | -less(C,pred(B)) | less(C,succ(A)).  [resolve(330,a,56,b)].

given #387 (A,wt=19): 219 occupied(succ(A),f2(A,in),out1) | gate(f2(A,in)) != out1 | -open(A,in) | safe(A,in).  [resolve(122,b,70,b)].

given #388 (T,wt=11): 472 less(A,B) | -less(succ(A),C) | less(pred(B),C).  [resolve(330,a,56,a)].

given #389 (T,wt=11): 477 less(pred(A),succ(B)) | less(C,A) | less(B,C).  [resolve(330,b,153,b)].

given #390 (T,wt=11): 478 less(pred(A),succ(B)) | -less(C,B) | less(C,A).  [resolve(330,b,56,b)].

given #391 (T,wt=11): 479 less(pred(A),succ(B)) | -less(A,C) | less(B,C).  [resolve(330,b,56,a)].

given #392 (A,wt=19): 220 occupied(succ(A),f1(A,in),out1) | gate(f1(A,in)) != out1 | -open(A,in) | node_empty(A,in).  [resolve(122,b,68,b)].

given #393 (T,wt=11): 480 less(pred(A),succ(B)) | -less(A,B) | B = A.  [resolve(330,b,55,b)].

given #394 (T,wt=11): 481 less(pred(A),succ(B)) | -less(A,B) | A = B.  [resolve(330,b,55,a)].

given #395 (T,wt=11): 484 less(pred(A),B) | less(C,A) | less(pred(B),C).  [resolve(337,a,153,b)].

given #396 (T,wt=11): 485 less(pred(A),B) | -less(C,pred(B)) | less(C,A).  [resolve(337,a,56,b)].

given #397 (A,wt=16): 226 path_open(A,f3(A,in),in,out2) | gate(f3(A,in)) != out2 | safe(A,in).  [resolve(132,b,71,b)].

given #398 (T,wt=11): 486 less(pred(A),B) | -less(A,C) | less(pred(B),C).  [resolve(337,a,56,a)].

given #399 (T,wt=11): 504 less(pred(A),pred(B)) | less(C,A) | less(B,C).  [resolve(338,a,153,b)].

given #400 (T,wt=11): 505 less(pred(A),pred(B)) | -less(C,B) | less(C,A).  [resolve(338,a,56,b)].

given #401 (T,wt=11): 506 less(pred(A),pred(B)) | -less(A,C) | less(B,C).  [resolve(338,a,56,a)].

given #402 (A,wt=16): 227 path_open(A,f2(A,in),in,out2) | gate(f2(A,in)) != out2 | safe(A,in).  [resolve(132,b,70,b)].

given #403 (T,wt=11): 507 less(pred(A),pred(B)) | -less(A,B) | B = A.  [resolve(338,a,55,b)].

given #404 (T,wt=11): 508 less(pred(A),pred(B)) | -less(A,B) | A = B.  [resolve(338,a,55,a)].

given #405 (T,wt=11): 510 less(A,B) | less(C,pred(A)) | less(pred(B),C).  [resolve(338,b,153,b)].

given #406 (T,wt=11): 511 less(A,B) | -less(C,pred(B)) | less(C,pred(A)).  [resolve(338,b,56,b)].

given #407 (A,wt=16): 228 path_open(A,f1(A,in),in,out2) | gate(f1(A,in)) != out2 | node_empty(A,in).  [resolve(132,b,68,b)].

given #408 (T,wt=11): 512 less(A,B) | -less(pred(A),C) | less(pred(B),C).  [resolve(338,b,56,a)].

given #409 (T,wt=11): 518 less(A,succ(succ(succ(B)))) | less(pred(pred(B)),A).  [resolve(339,a,153,b)].

given #410 (T,wt=11): 519 -less(A,pred(pred(B))) | less(A,succ(succ(succ(B)))).  [resolve(339,a,56,b)].

given #411 (T,wt=11): 520 -less(succ(succ(succ(A))),B) | less(pred(pred(A)),B).  [resolve(339,a,56,a)].

given #412 (A,wt=16): 229 path_open(A,f3(A,in),in,out1) | gate(f3(A,in)) != out1 | safe(A,in).  [resolve(140,b,71,b)].

given #413 (T,wt=11): 525 less(A,succ(succ(succ(succ(B))))) | less(pred(B),A).  [resolve(341,a,153,b)].

given #414 (T,wt=11): 526 -less(A,pred(B)) | less(A,succ(succ(succ(succ(B))))).  [resolve(341,a,56,b)].

given #415 (T,wt=11): 527 -less(succ(succ(succ(succ(A)))),B) | less(pred(A),B).  [resolve(341,a,56,a)].

given #416 (T,wt=11): 531 less(A,succ(succ(succ(succ(succ(B)))))) | less(B,A).  [resolve(349,a,153,b)].

given #417 (A,wt=16): 230 path_open(A,f2(A,in),in,out1) | gate(f2(A,in)) != out1 | safe(A,in).  [resolve(140,b,70,b)].

given #418 (T,wt=11): 532 -less(A,B) | less(A,succ(succ(succ(succ(succ(B)))))).  [resolve(349,a,56,b)].

given #419 (T,wt=11): 533 -less(succ(succ(succ(succ(succ(A))))),B) | less(A,B).  [resolve(349,a,56,a)].

given #420 (T,wt=11): 537 less(A,succ(succ(B))) | less(pred(pred(pred(B))),A).  [resolve(354,a,153,b)].

given #421 (T,wt=11): 538 -less(A,pred(pred(pred(B)))) | less(A,succ(succ(B))).  [resolve(354,a,56,b)].

given #422 (A,wt=16): 231 path_open(A,f1(A,in),in,out1) | gate(f1(A,in)) != out1 | node_empty(A,in).  [resolve(140,b,68,b)].

given #423 (T,wt=11): 539 -less(succ(succ(A)),B) | less(pred(pred(pred(A))),B).  [resolve(354,a,56,a)].

given #424 (T,wt=11): 543 less(A,succ(B)) | less(pred(pred(pred(pred(B)))),A).  [resolve(360,a,153,b)].

given #425 (T,wt=11): 544 -less(A,pred(pred(pred(pred(B))))) | less(A,succ(B)).  [resolve(360,a,56,b)].

given #426 (T,wt=11): 545 -less(succ(A),B) | less(pred(pred(pred(pred(A)))),B).  [resolve(360,a,56,a)].

given #427 (A,wt=12): 232 gate(A) = out1 | open(B,in) | -path_open(B,A,in,out2).  [para(79(a,1),142(b,4))].

given #428 (T,wt=11): 549 less(A,B) | less(pred(pred(pred(pred(pred(B))))),A).  [resolve(366,a,153,b)].

given #429 (T,wt=11): 550 -less(A,pred(pred(pred(pred(pred(B)))))) | less(A,B).  [resolve(366,a,56,b)].

given #430 (T,wt=11): 551 -less(A,B) | less(pred(pred(pred(pred(pred(A))))),B).  [resolve(366,a,56,a)].

given #431 (T,wt=11): 578 less(pred(A),B) | less(pred(pred(B)),succ(succ(A))).  [resolve(283,a,280,a)].

given #432 (A,wt=20): 234 at(f5(A),f6(A),A) | open(B,A) | less(B,f4(A,B,f3(B,A))) | safe(B,A).  [resolve(144,b,71,b)].

given #433 (T,wt=11): 579 less(pred(A),succ(succ(B))) | less(B,succ(succ(A))).  [resolve(283,a,275,a)].

given #434 (T,wt=11): 580 less(pred(A),succ(B)) | less(pred(B),succ(succ(A))).  [resolve(283,a,269,a)].

given #435 (T,wt=11): 587 less(pred(pred(pred(pred(pred(pred(A)))))),succ(succ(A))).  [resolve(284,a,366,a)].

given #436 (T,wt=11): 588 less(A,succ(succ(B))) | less(pred(pred(B)),pred(A)).  [resolve(284,a,338,a)].

given #437 (A,wt=20): 235 at(f5(A),f6(A),A) | open(B,A) | less(B,f4(A,B,f2(B,A))) | safe(B,A).  [resolve(144,b,70,b)].

given #438 (T,wt=11): 589 less(pred(A),succ(succ(B))) | less(pred(pred(B)),A).  [resolve(284,a,337,b)].

given #439 (T,wt=11): 590 less(A,succ(succ(B))) | less(pred(pred(B)),succ(A)).  [resolve(284,a,330,b)].

given #440 (T,wt=11): 592 less(pred(A),succ(succ(succ(succ(succ(succ(succ(A)))))))).  [resolve(285,a,349,a)].

given #441 (T,wt=11): 593 less(pred(A),B) | less(pred(B),succ(succ(succ(A)))).  [resolve(285,a,330,b)].

given #442 (A,wt=20): 236 at(f5(A),f6(A),A) | open(B,A) | less(B,f4(A,B,f1(B,A))) | node_empty(B,A).  [resolve(144,b,68,b)].

given #443 (T,wt=11): 594 less(pred(A),succ(B)) | less(B,succ(succ(succ(A)))).  [resolve(285,a,311,b)].

given #444 (T,wt=11): 595 less(pred(A),pred(B)) | less(B,succ(succ(succ(A)))).  [resolve(285,a,303,b)].

given #445 (T,wt=11): 597 less(A,B) | less(pred(pred(B)),succ(succ(succ(A)))).  [resolve(288,a,280,a)].

given #446 (T,wt=11): 598 less(A,succ(succ(B))) | less(B,succ(succ(succ(A)))).  [resolve(288,a,275,a)].

given #447 (A,wt=20): 237 at(f5(A),f6(A),A) | open(B,A) | open(f4(A,B,f3(B,A)),A) | safe(B,A).  [resolve(145,b,71,b)].

given #448 (T,wt=11): 599 less(A,succ(B)) | less(pred(B),succ(succ(succ(A)))).  [resolve(288,a,269,a)].

given #449 (T,wt=11): 607 less(pred(pred(pred(pred(pred(A))))),succ(succ(succ(A)))).  [resolve(289,a,366,a)].

given #450 (T,wt=11): 608 less(pred(pred(pred(pred(A)))),succ(succ(succ(succ(A))))).  [resolve(289,a,360,a)].

given #451 (T,wt=11): 609 less(pred(pred(pred(A))),succ(succ(succ(succ(succ(A)))))).  [resolve(289,a,354,a)].

given #452 (A,wt=20): 238 at(f5(A),f6(A),A) | open(B,A) | open(f4(A,B,f2(B,A)),A) | safe(B,A).  [resolve(145,b,70,b)].

given #453 (T,wt=11): 610 less(A,succ(succ(succ(succ(succ(succ(succ(succ(A))))))))).  [resolve(289,a,349,a)].

given #454 (T,wt=11): 611 less(pred(pred(A)),succ(succ(succ(succ(succ(succ(A))))))).  [resolve(289,a,339,a)].

given #455 (T,wt=11): 612 less(pred(A),succ(succ(succ(succ(B))))) | less(B,A).  [resolve(289,a,330,a)].

given #456 (T,wt=11): 613 less(A,succ(succ(succ(succ(B))))) | less(B,succ(A)).  [resolve(289,a,311,b)].

given #457 (A,wt=20): 239 at(f5(A),f6(A),A) | open(B,A) | open(f4(A,B,f1(B,A)),A) | node_empty(B,A).  [resolve(145,b,68,b)].

given #458 (T,wt=11): 614 less(A,succ(succ(succ(succ(B))))) | less(B,pred(A)).  [resolve(289,a,303,a)].

given #459 (T,wt=11): 620 less(pred(pred(A)),B) | less(pred(pred(B)),succ(A)).  [resolve(293,a,280,a)].

given #460 (T,wt=11): 621 less(pred(pred(A)),succ(succ(B))) | less(B,succ(A)).  [resolve(293,a,275,a)].

given #461 (T,wt=11): 622 less(pred(pred(A)),succ(B)) | less(pred(B),succ(A)).  [resolve(293,a,269,a)].

given #462 (A,wt=18): 240 -open(f5(A),A) | open(B,A) | less(B,f4(A,B,f3(B,A))) | safe(B,A).  [resolve(146,b,71,b)].

given #463 (T,wt=11): 629 less(pred(pred(pred(pred(pred(pred(pred(A))))))),succ(A)).  [resolve(294,a,366,a)].

given #464 (T,wt=11): 630 less(A,succ(B)) | less(pred(pred(pred(B))),pred(A)).  [resolve(294,a,338,a)].

given #465 (T,wt=11): 631 less(pred(A),succ(B)) | less(pred(pred(pred(B))),A).  [resolve(294,a,337,b)].

given #466 (T,wt=11): 632 less(A,succ(B)) | less(pred(pred(pred(B))),succ(A)).  [resolve(294,a,330,b)].

given #467 (A,wt=18): 241 -open(f5(A),A) | open(B,A) | less(B,f4(A,B,f2(B,A))) | safe(B,A).  [resolve(146,b,70,b)].

given #468 (T,wt=11): 640 less(pred(pred(pred(A))),B) | less(pred(pred(B)),A).  [resolve(299,a,280,a)].

given #469 (T,wt=11): 641 less(pred(pred(pred(A))),succ(succ(B))) | less(B,A).  [resolve(299,a,275,a)].

given #470 (T,wt=11): 642 less(pred(pred(pred(A))),succ(B)) | less(pred(B),A).  [resolve(299,a,269,a)].

given #471 (T,wt=11): 649 less(pred(pred(pred(pred(pred(pred(pred(pred(A)))))))),A).  [resolve(300,a,366,a)].

given #472 (A,wt=18): 242 -open(f5(A),A) | open(B,A) | less(B,f4(A,B,f1(B,A))) | node_empty(B,A).  [resolve(146,b,68,b)].

given #473 (T,wt=11): 650 less(A,B) | less(pred(pred(pred(pred(B)))),pred(A)).  [resolve(300,a,338,a)].

given #474 (T,wt=11): 651 less(pred(A),B) | less(pred(pred(pred(pred(B)))),A).  [resolve(300,a,337,b)].

given #475 (T,wt=11): 652 less(A,B) | less(pred(pred(pred(pred(B)))),succ(A)).  [resolve(300,a,330,b)].

given #476 (T,wt=11): 780 less(pred(pred(pred(c1))),f7(c1,f3(c1,c2),c2)).  [resolve(779,a,301,a)].

given #477 (A,wt=18): 243 -open(f5(A),A) | open(B,A) | open(f4(A,B,f3(B,A)),A) | safe(B,A).  [resolve(147,b,71,b)].

given #478 (T,wt=11): 781 less(c1,succ(succ(succ(f7(c1,f3(c1,c2),c2))))).  [resolve(779,a,289,a)].

given #479 (T,wt=11): 789 less(A,f7(c1,f3(c1,c2),c2)) | less(c1,A).  [resolve(779,a,153,b)].

given #480 (T,wt=11): 790 -less(A,c1) | less(A,f7(c1,f3(c1,c2),c2)).  [resolve(779,a,56,b)].

given #481 (T,wt=11): 791 -less(f7(c1,f3(c1,c2),c2),A) | less(c1,A).  [resolve(779,a,56,a)].

given #482 (A,wt=18): 244 -open(f5(A),A) | open(B,A) | open(f4(A,B,f2(B,A)),A) | safe(B,A).  [resolve(147,b,70,b)].

given #483 (T,wt=11): 810 less(pred(pred(pred(c1))),f7(c1,f2(c1,c2),c2)).  [resolve(809,a,301,a)].

given #484 (T,wt=11): 811 less(c1,succ(succ(succ(f7(c1,f2(c1,c2),c2))))).  [resolve(809,a,289,a)].

given #485 (T,wt=11): 819 less(A,f7(c1,f2(c1,c2),c2)) | less(c1,A).  [resolve(809,a,153,b)].

given #486 (T,wt=11): 820 -less(A,c1) | less(A,f7(c1,f2(c1,c2),c2)).  [resolve(809,a,56,b)].

given #487 (A,wt=18): 245 -open(f5(A),A) | open(B,A) | open(f4(A,B,f1(B,A)),A) | node_empty(B,A).  [resolve(147,b,68,b)].

given #488 (T,wt=11): 821 -less(f7(c1,f2(c1,c2),c2),A) | less(c1,A).  [resolve(809,a,56,a)].

given #489 (T,wt=11): 859 less(A,f7(A,f1(A,B),B)) | safe(A,B).  [resolve(178,b,169,b)].

given #490 (T,wt=11): 861 less(pred(pred(pred(c1))),f7(c1,f1(c1,c2),c2)).  [resolve(858,a,301,a)].

given #491 (T,wt=11): 862 less(c1,succ(succ(succ(f7(c1,f1(c1,c2),c2))))).  [resolve(858,a,289,a)].

given #492 (A,wt=21): 246 -less(f5(A),B) | -open(B,A) | open(C,A) | less(C,f4(A,C,f3(C,A))) | safe(C,A).  [resolve(148,c,71,b)].

given #493 (T,wt=11): 870 less(A,f7(c1,f1(c1,c2),c2)) | less(c1,A).  [resolve(858,a,153,b)].

given #494 (T,wt=11): 871 -less(A,c1) | less(A,f7(c1,f1(c1,c2),c2)).  [resolve(858,a,56,b)].

given #495 (T,wt=11): 872 -less(f7(c1,f1(c1,c2),c2),A) | less(c1,A).  [resolve(858,a,56,a)].

given #496 (T,wt=11): 907 safe(A,B) | f9(A,f3(A,B),B) = in.  [resolve(179,a,91,a),flip(b)].

given #497 (A,wt=21): 247 -less(f5(A),B) | -open(B,A) | open(C,A) | less(C,f4(A,C,f2(C,A))) | safe(C,A).  [resolve(148,c,70,b)].

given #498 (T,wt=8): 5904 f9(c1,f3(c1,c2),c2) = in.  [resolve(907,a,143,a)].

given #499 (T,wt=11): 913 less(pred(c1),succ(succ(f7(c1,f3(c1,c2),c2)))).  [resolve(784,a,274,a)].

NOTE: Back_subsumption disabled, ratio of kept to back_subsumed is 3012 (0.00 of 1.80 sec).

given #500 (T,wt=11): 922 less(pred(pred(c1)),succ(f7(c1,f3(c1,c2),c2))).  [resolve(788,a,280,a)].

given #501 (T,wt=11): 932 less(pred(c1),succ(succ(f7(c1,f2(c1,c2),c2)))).  [resolve(814,a,274,a)].

given #502 (A,wt=21): 248 -less(f5(A),B) | -open(B,A) | open(C,A) | less(C,f4(A,C,f1(C,A))) | node_empty(C,A).  [resolve(148,c,68,b)].

given #503 (T,wt=11): 941 less(pred(pred(c1)),succ(f7(c1,f2(c1,c2),c2))).  [resolve(818,a,280,a)].

given #504 (T,wt=11): 949 safe(A,B) | f9(A,f2(A,B),B) = in.  [resolve(180,a,91,a),flip(b)].

given #505 (T,wt=8): 6286 f9(c1,f2(c1,c2),c2) = in.  [resolve(949,a,143,a)].

given #506 (T,wt=11): 955 less(pred(c1),succ(succ(f7(c1,f1(c1,c2),c2)))).  [resolve(865,a,274,a)].

given #507 (A,wt=21): 249 -less(f5(A),B) | -open(B,A) | open(C,A) | open(f4(A,C,f3(C,A)),A) | safe(C,A).  [resolve(149,c,71,b)].

given #508 (T,wt=11): 964 less(pred(pred(c1)),succ(f7(c1,f1(c1,c2),c2))).  [resolve(869,a,280,a)].

given #509 (T,wt=11): 979 node_empty(A,B) | f9(A,f1(A,B),B) = in.  [resolve(181,a,91,a),flip(b)].

given #510 (T,wt=8): 6454 f9(c1,f1(c1,c2),c2) = in.  [resolve(979,a,262,a)].

given #511 (T,wt=11): 1039 less(A,B) | less(C,pred(A)) | less(B,pred(C)).  [resolve(305,b,164,b)].

given #512 (A,wt=21): 250 -less(f5(A),B) | -open(B,A) | open(C,A) | open(f4(A,C,f2(C,A)),A) | safe(C,A).  [resolve(149,c,70,b)].

given #513 (T,wt=11): 1042 less(pred(pred(pred(f8(c1,f3(c1,c2),c2)))),c1).  [resolve(1040,a,301,a)].

given #514 (T,wt=11): 1043 less(f8(c1,f3(c1,c2),c2),succ(succ(succ(c1)))).  [resolve(1040,a,289,a)].

given #515 (T,wt=11): 1051 less(A,c1) | less(f8(c1,f3(c1,c2),c2),A).  [resolve(1040,a,153,b)].

given #516 (T,wt=11): 1052 -less(A,f8(c1,f3(c1,c2),c2)) | less(A,c1).  [resolve(1040,a,56,b)].

given #517 (A,wt=21): 251 -less(f5(A),B) | -open(B,A) | open(C,A) | open(f4(A,C,f1(C,A)),A) | node_empty(C,A).  [resolve(149,c,68,b)].

given #518 (T,wt=11): 1053 -less(c1,A) | less(f8(c1,f3(c1,c2),c2),A).  [resolve(1040,a,56,a)].

given #519 (T,wt=11): 1058 less(pred(f8(c1,f3(c1,c2),c2)),succ(succ(c1))).  [resolve(1046,a,274,a)].

given #520 (T,wt=11): 1068 less(pred(pred(f8(c1,f3(c1,c2),c2))),succ(c1)).  [resolve(1050,a,280,a)].

given #521 (T,wt=11): 1082 less(A,B) | less(B,C) | less(C,pred(pred(A))).  [resolve(306,b,164,b)].

given #522 (A,wt=12): 286 -less(succ(succ(A)),pred(A)) | pred(A) = succ(succ(A)).  [resolve(266,a,55,b)].

given #523 (T,wt=11): 1085 less(pred(pred(pred(f8(c1,f2(c1,c2),c2)))),c1).  [resolve(1083,a,301,a)].

given #524 (T,wt=11): 1086 less(f8(c1,f2(c1,c2),c2),succ(succ(succ(c1)))).  [resolve(1083,a,289,a)].

given #525 (T,wt=11): 1094 less(A,c1) | less(f8(c1,f2(c1,c2),c2),A).  [resolve(1083,a,153,b)].

given #526 (T,wt=11): 1095 -less(A,f8(c1,f2(c1,c2),c2)) | less(A,c1).  [resolve(1083,a,56,b)].

given #527 (A,wt=12): 291 -less(succ(succ(succ(A))),A) | succ(succ(succ(A))) = A.  [resolve(272,a,55,b),flip(b)].

given #528 (T,wt=11): 1096 -less(c1,A) | less(f8(c1,f2(c1,c2),c2),A).  [resolve(1083,a,56,a)].

given #529 (T,wt=11): 1101 less(pred(f8(c1,f2(c1,c2),c2)),succ(succ(c1))).  [resolve(1089,a,274,a)].

given #530 (T,wt=11): 1111 less(pred(pred(f8(c1,f2(c1,c2),c2))),succ(c1)).  [resolve(1093,a,280,a)].

given #531 (T,wt=11): 1140 less(f8(A,f1(A,B),B),A) | safe(A,B).  [resolve(184,b,169,b)].

given #532 (A,wt=12): 296 -less(succ(A),pred(pred(A))) | pred(pred(A)) = succ(A).  [resolve(277,a,55,b)].

given #533 (T,wt=11): 1144 less(pred(pred(pred(f8(c1,f1(c1,c2),c2)))),c1).  [resolve(1139,a,301,a)].

given #534 (T,wt=11): 1145 less(f8(c1,f1(c1,c2),c2),succ(succ(succ(c1)))).  [resolve(1139,a,289,a)].

given #535 (T,wt=11): 1153 less(A,c1) | less(f8(c1,f1(c1,c2),c2),A).  [resolve(1139,a,153,b)].

given #536 (T,wt=11): 1154 -less(A,f8(c1,f1(c1,c2),c2)) | less(A,c1).  [resolve(1139,a,56,b)].

given #537 (A,wt=12): 302 -less(A,pred(pred(pred(A)))) | pred(pred(pred(A))) = A.  [resolve(297,a,55,b)].

given #538 (T,wt=11): 1155 -less(c1,A) | less(f8(c1,f1(c1,c2),c2),A).  [resolve(1139,a,56,a)].

given #539 (T,wt=11): 1161 less(pred(f8(c1,f1(c1,c2),c2)),succ(succ(c1))).  [resolve(1148,a,274,a)].

given #540 (T,wt=11): 1171 less(pred(pred(f8(c1,f1(c1,c2),c2))),succ(c1)).  [resolve(1152,a,280,a)].

given #541 (T,wt=11): 1201 less(A,pred(B)) | B = A | less(B,pred(A)).  [resolve(309,b,164,b)].

given #542 (A,wt=14): 345 -less(succ(succ(succ(A))),pred(A)) | pred(A) = succ(succ(succ(A))).  [resolve(282,a,55,b)].

given #543 (T,wt=11): 1204 switch(succ(A),B) = switch(A,B) | safe(A,B).  [resolve(185,a,169,b)].

given #544 (T,wt=11): 6073 enter(f8(c1,f3(c1,c2),c2),f3(c1,c2),in).  [para(5904(a,1),179(a,3)),unit_del(b,143)].

given #545 (T,wt=11): 6287 enter(f8(c1,f2(c1,c2),c2),f2(c1,c2),in).  [para(6286(a,1),180(a,3)),unit_del(b,143)].

given #546 (T,wt=11): 6455 f9(A,f1(A,B),B) = in | safe(A,B).  [resolve(979,a,169,b)].

given #547 (A,wt=14): 353 -less(succ(succ(succ(succ(A)))),A) | succ(succ(succ(succ(A)))) = A.  [resolve(287,a,55,b),flip(b)].

Low Water (keep): wt=29.000, iters=7900

Low Water (keep): wt=21.000, iters=6705

given #548 (F,wt=9): 7680 -at(f8(c1,f3(c1,c2),c2),A,in).  [resolve(6073,a,64,b)].

given #549 (F,wt=9): 7684 -at(f8(c1,f2(c1,c2),c2),A,in).  [resolve(6287,a,64,b)].

given #550 (F,wt=10): 7692 -path_open(f8(c1,f3(c1,c2),c2),A,in,out1).  [ur(133,b,7680,a)].

given #551 (F,wt=10): 7693 -path_open(f8(c1,f3(c1,c2),c2),A,in,out2).  [ur(125,b,7680,a)].

given #552 (T,wt=8): 7690 safe(f8(c1,f3(c1,c2),c2),in).  [resolve(7680,a,71,b)].

given #553 (T,wt=8): 7691 node_empty(f8(c1,f3(c1,c2),c2),in).  [resolve(7680,a,68,b)].

given #554 (T,wt=8): 7694 safe(f8(c1,f2(c1,c2),c2),in).  [resolve(7684,a,71,b)].

given #555 (T,wt=8): 7695 node_empty(f8(c1,f2(c1,c2),c2),in).  [resolve(7684,a,68,b)].

given #556 (A,wt=14): 359 -less(succ(succ(A)),pred(pred(A))) | pred(pred(A)) = succ(succ(A)).  [resolve(292,a,55,b)].

given #557 (F,wt=10): 7696 -path_open(f8(c1,f2(c1,c2),c2),A,in,out1).  [ur(133,b,7684,a)].

given #558 (F,wt=10): 7697 -path_open(f8(c1,f2(c1,c2),c2),A,in,out2).  [ur(125,b,7684,a)].

given #559 (F,wt=11): 7681 -at(f8(c1,f3(c1,c2),c2),f3(c1,c2),A).  [resolve(6073,a,63,b)].

given #560 (F,wt=11): 7682 -enter(f8(c1,f3(c1,c2),c2),f2(c1,c2),in).  [ur(65,b,6073,a,c,233,a)].

given #561 (T,wt=11): 6457 enter(f8(c1,f1(c1,c2),c2),f1(c1,c2),in).  [para(6454(a,1),181(a,3)),unit_del(b,262)].

given #562 (T,wt=12): 373 less(succ(A),pred(B)) | pred(B) = A | less(B,A).  [resolve(159,b,164,a)].

given #563 (T,wt=12): 374 less(succ(succ(A)),B) | succ(A) = B | less(B,A).  [resolve(159,b,59,b),flip(b)].

Low Water (keep): wt=20.000, iters=6696

Low Water (keep): wt=19.000, iters=6666

given #564 (T,wt=12): 377 less(A,B) | less(succ(succ(B)),C) | less(C,succ(A)).  [resolve(264,a,158,b)].

Low Water (keep): wt=18.000, iters=6681

given #565 (A,wt=14): 365 -less(succ(A),pred(pred(pred(A)))) | pred(pred(pred(A))) = succ(A).  [resolve(298,a,55,b)].

given #566 (F,wt=9): 7702 -at(f8(c1,f1(c1,c2),c2),A,in).  [resolve(6457,a,64,b)].

given #567 (F,wt=10): 7873 -path_open(f8(c1,f1(c1,c2),c2),A,in,out1).  [ur(133,b,7702,a)].

given #568 (F,wt=10): 7874 -path_open(f8(c1,f1(c1,c2),c2),A,in,out2).  [ur(125,b,7702,a)].

given #569 (F,wt=11): 7685 -at(f8(c1,f2(c1,c2),c2),f2(c1,c2),A).  [resolve(6287,a,63,b)].

given #570 (T,wt=8): 7871 safe(f8(c1,f1(c1,c2),c2),in).  [resolve(7702,a,71,b)].

given #571 (T,wt=8): 7872 node_empty(f8(c1,f1(c1,c2),c2),in).  [resolve(7702,a,68,b)].

given #572 (T,wt=12): 378 less(A,B) | less(succ(C),succ(A)) | less(succ(B),C).  [resolve(264,a,157,b)].

given #573 (T,wt=12): 388 less(pred(A),B) | less(succ(B),C) | less(C,succ(A)).  [resolve(267,a,158,b)].

Low Water (keep): wt=17.000, iters=6670

given #574 (A,wt=14): 371 -less(A,pred(pred(pred(pred(A))))) | pred(pred(pred(pred(A)))) = A.  [resolve(336,a,55,b)].

given #575 (F,wt=11): 7686 -enter(f8(c1,f2(c1,c2),c2),f3(c1,c2),in).  [ur(65,b,6287,a,c,233,a(flip))].

given #576 (F,wt=11): 7703 -at(f8(c1,f1(c1,c2),c2),f1(c1,c2),A).  [resolve(6457,a,63,b)].

given #577 (T,wt=12): 389 less(pred(A),B) | less(succ(C),succ(A)) | less(B,C).  [resolve(267,a,157,b)].

given #578 (T,wt=12): 403 less(A,B) | less(succ(B),C) | less(C,succ(succ(A))).  [resolve(273,a,158,b)].

given #579 (T,wt=12): 404 less(A,B) | less(succ(C),succ(succ(A))) | less(B,C).  [resolve(273,a,157,b)].

given #580 (T,wt=12): 416 less(A,B) | less(C,A) | less(succ(succ(B)),succ(C)).  [resolve(161,b,264,b)].

given #581 (A,wt=14): 376 less(A,B) | less(succ(succ(B)),succ(A)) | succ(A) = succ(B).  [resolve(264,a,159,b)].

given #582 (T,wt=12): 420 less(pred(pred(A)),B) | less(succ(B),C) | less(C,A).  [resolve(278,a,158,b)].

given #583 (T,wt=12): 421 less(pred(pred(A)),B) | less(succ(C),A) | less(B,C).  [resolve(278,a,157,b)].

given #584 (T,wt=12): 432 less(A,pred(B)) | less(succ(B),C) | less(C,succ(A)).  [resolve(303,a,158,b)].

given #585 (T,wt=12): 433 less(A,pred(B)) | less(succ(C),succ(A)) | less(B,C).  [resolve(303,a,157,b)].

given #586 (A,wt=13): 381 less(A,B) | -less(succ(A),succ(B)) | succ(B) = succ(A).  [resolve(264,a,55,b)].

given #587 (T,wt=12): 437 less(A,pred(B)) | -less(succ(A),B) | succ(A) = B.  [resolve(303,a,55,b),flip(c)].

given #588 (T,wt=12): 440 less(A,succ(B)) | less(succ(C),pred(A)) | less(B,C).  [resolve(303,b,157,b)].

given #589 (T,wt=12): 444 less(A,succ(B)) | -less(pred(A),B) | pred(A) = B.  [resolve(303,b,55,b),flip(c)].

given #590 (T,wt=12): 446 less(A,B) | succ(B) = A | less(succ(B),pred(A)).  [resolve(162,b,164,b)].

given #591 (A,wt=13): 382 less(A,B) | -less(succ(A),succ(B)) | succ(A) = succ(B).  [resolve(264,a,55,a)].

given #592 (T,wt=12): 451 less(A,succ(B)) | less(succ(C),succ(A)) | less(B,C).  [resolve(311,a,157,b)].

given #593 (T,wt=12): 455 less(A,succ(B)) | -less(succ(A),B) | succ(A) = B.  [resolve(311,a,55,b),flip(c)].

given #594 (T,wt=12): 457 less(pred(A),B) | less(succ(succ(B)),C) | less(C,A).  [resolve(327,a,158,b)].

given #595 (T,wt=12): 458 less(pred(A),B) | less(succ(C),A) | less(succ(B),C).  [resolve(327,a,157,b)].

given #596 (A,wt=14): 398 less(succ(succ(A)),succ(B)) | succ(A) = succ(B) | less(B,A).  [resolve(160,b,264,a)].

given #597 (T,wt=12): 461 less(pred(A),B) | -less(A,succ(B)) | succ(B) = A.  [resolve(327,a,55,b)].

given #598 (T,wt=12): 463 less(succ(succ(A)),B) | less(C,A) | less(pred(B),C).  [resolve(327,b,161,b)].

given #599 (T,wt=12): 466 less(succ(A),B) | -less(A,pred(B)) | pred(B) = A.  [resolve(327,b,55,b)].

given #600 (T,wt=12): 469 less(A,B) | less(succ(C),succ(A)) | less(pred(B),C).  [resolve(330,a,157,b)].

given #601 (A,wt=13): 431 less(A,pred(B)) | less(succ(B),succ(A)) | succ(A) = B.  [resolve(303,a,160,b),flip(c)].

given #602 (T,wt=12): 476 less(pred(A),succ(B)) | less(succ(C),A) | less(B,C).  [resolve(330,b,157,b)].

given #603 (T,wt=12): 483 less(pred(A),B) | less(succ(C),A) | less(pred(B),C).  [resolve(337,a,157,b)].

given #604 (T,wt=12): 487 less(pred(A),B) | -less(A,pred(B)) | pred(B) = A.  [resolve(337,a,55,b)].

given #605 (T,wt=12): 498 node_empty(A,B) | -occupied(A,C,B) | f1(A,B) = C.  [resolve(165,b,76,b)].

given #606 (A,wt=13): 445 less(A,B) | succ(B) = A | less(succ(succ(B)),succ(A)).  [resolve(162,b,264,b)].

given #607 (T,wt=12): 500 less(pred(A),pred(B)) | less(succ(B),A) | B = A.  [resolve(338,a,160,b)].

given #608 (T,wt=12): 501 less(pred(A),pred(B)) | less(succ(B),A) | A = B.  [resolve(338,a,159,b)].

given #609 (T,wt=12): 502 less(pred(A),pred(B)) | less(succ(B),C) | less(C,A).  [resolve(338,a,158,b)].

given #610 (T,wt=12): 503 less(pred(A),pred(B)) | less(succ(C),A) | less(B,C).  [resolve(338,a,157,b)].

given #611 (A,wt=13): 447 less(succ(A),B) | succ(B) = succ(A) | less(succ(B),A).  [resolve(162,b,59,b)].

given #612 (T,wt=12): 509 less(A,B) | less(succ(C),pred(A)) | less(pred(B),C).  [resolve(338,b,157,b)].

given #613 (T,wt=12): 517 less(succ(A),succ(succ(succ(B)))) | less(pred(pred(B)),A).  [resolve(339,a,157,b)].

given #614 (T,wt=12): 524 less(succ(A),succ(succ(succ(succ(B))))) | less(pred(B),A).  [resolve(341,a,157,b)].

given #615 (T,wt=12): 530 less(succ(A),succ(succ(succ(succ(succ(B)))))) | less(B,A).  [resolve(349,a,157,b)].

given #616 (A,wt=13): 456 less(pred(A),B) | less(succ(succ(B)),A) | succ(B) = A.  [resolve(327,a,160,b)].

given #617 (T,wt=12): 536 less(succ(A),succ(succ(B))) | less(pred(pred(pred(B))),A).  [resolve(354,a,157,b)].

given #618 (T,wt=12): 542 less(succ(A),succ(B)) | less(pred(pred(pred(pred(B)))),A).  [resolve(360,a,157,b)].

given #619 (T,wt=12): 548 less(succ(A),B) | less(pred(pred(pred(pred(pred(B))))),A).  [resolve(366,a,157,b)].

given #620 (T,wt=12): 563 safe(A,B) | -occupied(A,C,B) | f2(A,B) = C.  [resolve(170,b,76,b)].

given #621 (A,wt=14): 462 less(succ(succ(A)),B) | less(pred(B),A) | pred(B) = succ(A).  [resolve(327,b,162,b),flip(c)].

given #622 (F,wt=6): 9837 -occupied(c1,f3(c1,c2),c2).  [ur(563,a,143,a,c,233,a(flip))].

============================== PROOF =================================

% Proof 1 at 2.99 (+ 0.04) seconds.
% Length of proof is 16.
% Level of proof is 5.
% Maximum clause weight is 12.000.
% Given clauses 622.

10 (all T all Train all N (at(T,Train,N) -> occupied(T,Train,N))) # label(occupied) # label(axiom) # label(non_clause).  [assumption].
12 (all T all N (safe(T,N) <-> (all Train all OtherTrain (at(T,Train,N) & at(T,OtherTrain,N) -> Train = OtherTrain)))) # label(node_safe) # label(axiom) # label(non_clause).  [assumption].
16 (all T all Train all OtherTrain all N (occupied(T,Train,N) & occupied(T,OtherTrain,N) -> Train = OtherTrain)) # label(occupied_only_once) # label(axiom) # label(non_clause).  [assumption].
46 (all T all N safe(T,N)) # label(collision_critical) # label(conjecture) # label(non_clause) # label(goal).  [goal].
66 -at(A,B,C) | occupied(A,B,C) # label(occupied) # label(axiom).  [clausify(10)].
70 safe(A,B) | at(A,f2(A,B),B) # label(node_safe) # label(axiom).  [clausify(12)].
71 safe(A,B) | at(A,f3(A,B),B) # label(node_safe) # label(axiom).  [clausify(12)].
72 safe(A,B) | f3(A,B) != f2(A,B) # label(node_safe) # label(axiom).  [clausify(12)].
76 -occupied(A,B,C) | -occupied(A,D,C) | D = B # label(occupied_only_once) # label(axiom).  [clausify(16)].
143 -safe(c1,c2) # label(collision_critical) # label(conjecture).  [deny(46)].
170 safe(A,B) | occupied(A,f2(A,B),B).  [resolve(70,b,66,a)].
173 safe(A,B) | occupied(A,f3(A,B),B).  [resolve(71,b,66,a)].
233 f3(c1,c2) != f2(c1,c2).  [ur(72,a,143,a)].
563 safe(A,B) | -occupied(A,C,B) | f2(A,B) = C.  [resolve(170,b,76,b)].
9837 -occupied(c1,f3(c1,c2),c2).  [ur(563,a,143,a,c,233,a(flip))].
9838 $F.  [resolve(9837,a,173,b),unit_del(a,143)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=622. Generated=62430. Kept=9775. proofs=1.
Usable=622. Sos=9151. Demods=7. Limbo=0, Disabled=108. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=52026. Back_subsumed=2.
Sos_limit_deleted=628. Sos_displaced=0. Sos_removed=0.
New_demodulators=7 (0 lex), Back_demodulated=0. Back_unit_deleted=0.
Demod_attempts=620372. Demod_rewrites=16739.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=4759420. Nonunit_bsub_feature_tests=78939.
Megabytes=19.23.
User_CPU=2.99, System_CPU=0.04, Wall_clock=3.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

Exiting with 1 proof.

Process 15633 exit (max_proofs) Mon Jun 26 22:43:09 2017
